{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/Dashboard.vue","mtime":1569845369397},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _slicedToArray from \"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport DashboardLayout from '@/pages';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'Dashboard',\n  components: {\n    DatePicker: DatePicker,\n    datetime: datetime\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      start: null,\n      end: null,\n      shortcuts: [{\n        text: 'OK',\n        onClick: function onClick() {\n          _this.start = [new Date()], _this.end = [new Date()];\n        }\n      }],\n      timeOptions: {\n        start: '',\n        step: '',\n        end: ''\n      },\n      lang: {\n        days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n        months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec']\n      }\n    };\n  },\n  mounted: function mounted() {\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.data = []; // XY\n\n    chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"hours\";\n    series.dataFields.dateX = \"date\";\n    series.tooltipText = \"{value}\";\n    series.dataFields.value = \"hours\";\n    series.columns.template.width = am4core.percent(50);\n    series.tooltip.pointerOrientation = \"vertical\";\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.snapToSeries = series;\n    chart.cursor.xAxis = dateAxis; //chart.scrollbarY = new am4core.Scrollbar();\n\n    chart.scrollbarX = new am4core.Scrollbar();\n    this.chart = chart;\n    this.update_data();\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    update_data: function update_data() {\n      var token = localStorage.getItem('token');\n      var self = this;\n      var query = \"https://timepool.me:3001/api/workingtimes/user/\" + jwt_decode(token).id;\n\n      if (this.start != null && this.end != null) {\n        query += \"?start=\".concat(this.start, \"&end=\").concat(this.end);\n      }\n\n      axios.get(query, {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      }).then(function (result) {\n        var data = result.data;\n        var graphData = [];\n        var dailyHours = 0;\n        var index, obj;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                index = _step$value[0],\n                obj = _step$value[1];\n\n            var start = moment(obj.start);\n            var end = moment(obj.end);\n            dailyHours += end.diff(start, 'hours');\n\n            if (data[index + 1] == undefined || !moment(data[index + 1].start).isSame(start, 'day')) {\n              graphData.push({\n                date: \"\".concat(start.year().toString(), \"-\").concat((start.month() + 1).toString(), \"-\").concat(start.date().toString()),\n                hours: dailyHours\n              });\n              dailyHours = 0;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        self.chart.data = graphData;\n      });\n    }\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n      <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Time Range\">\n        <center>\n        <b-card-text>\n          Start: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"start\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n        </b-card-text>\n        <b-card-text>\n          End: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"end\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=lang :shortcuts=\"shortcuts\"></date-picker>\n        </b-card-text>\n        </center>\n      </b-card>\n      <br/>\n      <center><b-button v-on:click=\"update_data\">Update le graph</b-button></center>\n    <div class=\"graph\" ref=\"chartdiv\"></div>\n  </div>\n</template>\n\n<script>\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport DashboardLayout from '@/pages';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\n\n\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'Dashboard',\n  components: {\n    DatePicker,\n    datetime\n  },\n  data() {\n    return {\n      start: null,\n      end: null,\n      shortcuts: [\n      {\n        text: 'OK',\n        onClick: () => {\n          this.start = [new Date()],\n          this.end = [new Date()]\n          }\n      }],\n      timeOptions: {\n          start: '',\n          step: '',\n          end: ''\n      },\n      lang: {\n          days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n          months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],\n      }\n    }\n  },\n  mounted() {\n    let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.data = [];\n    // XY\n    chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"hours\";\n    series.dataFields.dateX = \"date\";\n    series.tooltipText = \"{value}\";\n    series.dataFields.value = \"hours\";\n    series.columns.template.width = am4core.percent(50);\n    series.tooltip.pointerOrientation = \"vertical\";\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.snapToSeries = series;\n    chart.cursor.xAxis = dateAxis;\n    //chart.scrollbarY = new am4core.Scrollbar();\n    chart.scrollbarX = new am4core.Scrollbar();\n    this.chart = chart;\n    this.update_data();\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n      update_data() {\n      var token = localStorage.getItem('token')\n      var self = this;\n      var query = \"https://timepool.me:3001/api/workingtimes/user/\" +  jwt_decode(token).id\n      if (this.start != null && this.end != null) {\n          query += `?start=${this.start}&end=${this.end}`;\n      }\n      axios.get(query, {\n      headers: {Authorization: 'Bearer ' + token}\n      })\n      .then(function(result) {\n      var data = result.data;\n      var graphData = [];\n      var dailyHours = 0;\n      var index, obj;\n\n      for (var [index, obj] of data.entries()) {\n          var start = moment(obj.start);\n          var end = moment(obj.end);\n          dailyHours += end.diff(start, 'hours');\n          if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n          graphData.push({\n              date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n              hours: dailyHours\n          });\n          dailyHours = 0;\n          }\n      }\n      self.chart.data = graphData;\n      })\n  }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.graph {\n  margin: auto;\n  width: 90%;\n  height: 500px;\n}\n</style>"],"sourceRoot":"src/pages"}]}
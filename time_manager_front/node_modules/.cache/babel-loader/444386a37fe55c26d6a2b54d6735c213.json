{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserGraph.vue","mtime":1569870727466},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _slicedToArray from \"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'UserGraph',\n  components: {\n    DatePicker: DatePicker,\n    datetime: datetime\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      // FOR ROLES\n      admin: null,\n      manager: null,\n      users: [],\n      allTeams: [],\n      myTeams: [],\n      myUsers: [],\n      myUsersInfo: [],\n      myUsersInfoUnique: [],\n      // FOR ALL\n      userId: null,\n      start: null,\n      end: null,\n      shortcuts: [{\n        text: 'OK',\n        onClick: function onClick() {\n          _this.start = [new Date()], _this.end = [new Date()];\n        }\n      }],\n      timeOptions: {\n        start: '',\n        step: '',\n        end: ''\n      },\n      lang: {\n        days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n        months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec']\n      }\n    };\n  },\n  created: function created() {\n    this.checkRole();\n    this.getUsers();\n    this.getMyTeams();\n  },\n  mounted: function mounted() {\n    var chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.data = []; // XY\n\n    chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"hours\";\n    series.dataFields.dateX = \"date\";\n    series.tooltipText = \"{value}\";\n    series.dataFields.value = \"hours\";\n    series.columns.template.width = am4core.percent(50);\n    series.tooltip.pointerOrientation = \"vertical\";\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.snapToSeries = series;\n    chart.cursor.xAxis = dateAxis; //chart.scrollbarY = new am4core.Scrollbar();\n\n    chart.scrollbarX = new am4core.Scrollbar();\n    this.chart = chart;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    selectedValue: function selectedValue(e) {\n      this.userId = e.target.value;\n    },\n    selectedValueM: function selectedValueM(e) {\n      this.userId = e.target.value;\n    },\n    selectedValueTeam: function selectedValueTeam(e) {\n      var _this2 = this;\n\n      this.myUsersInfoUnique = [];\n      this.teamId = e.target.value;\n      axios.get('https://timepool.me:3001/api/teamscontent/team/' + this.teamId, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        _this2.myUsers = response.data;\n\n        for (var i = 0; i < _this2.myUsers.length; i++) {\n          axios.get('https://timepool.me:3001/api/users/' + _this2.myUsers[i].employeeId, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          }).then(function (resp) {\n            _this2.myUsersInfoUnique.push(resp.data);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    checkRole: function checkRole() {\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.admin = true;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        this.manager = true;\n        this.admin = false;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n    getUsers: function getUsers() {\n      var _this3 = this;\n\n      axios.get('https://timepool.me:3001/api/users', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        _this3.users = response.data;\n\n        _this3.users.splice(0, 1);\n      }).catch(function (errors) {\n        console.log(errors);\n      });\n    },\n    getMyTeams: function getMyTeams() {\n      var _this4 = this;\n\n      // GET ALL THE TEAMS\n      axios.get('https://timepool.me:3001/api/teams', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        _this4.allTeams = response.data; // GET MY TEAMS ONLY\n\n        for (var i = 0; i < _this4.allTeams.length; i++) {\n          if (_this4.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n            _this4.myTeams.push(_this4.allTeams[i]);\n          }\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    display: function display() {\n      if (this.userId == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: \"Aucun employé n'a été sélectionné\",\n          footer: 'Merci de réessayez'\n        });\n      } else {\n        this.update_data();\n      }\n    },\n    update_data: function update_data() {\n      var self = this;\n      var query = \"https://timepool.me:3001/api/workingtimes/user/\" + this.userId;\n\n      if (this.start != null && this.end != null) {\n        query += \"?start=\".concat(this.start, \"&end=\").concat(this.end);\n      }\n\n      axios.get(query, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (result) {\n        var data = result.data;\n        var graphData = [];\n        var dailyHours = 0;\n        var index, obj;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                index = _step$value[0],\n                obj = _step$value[1];\n\n            var start = moment(obj.start);\n            var end = moment(obj.end);\n            dailyHours += end.diff(start, 'hours');\n\n            if (data[index + 1] == undefined || !moment(data[index + 1].start).isSame(start, 'day')) {\n              graphData.push({\n                date: \"\".concat(start.year().toString(), \"-\").concat((start.month() + 1).toString(), \"-\").concat(start.date().toString()),\n                hours: dailyHours\n              });\n              dailyHours = 0;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        self.chart.data = graphData;\n      });\n    }\n  }\n};",{"version":3,"sources":["UserGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <select v-on:change=\"selectedValue($event)\" id=\"listTeams\" v-if=\"admin\">\n            <option>Choisissez un utilisateur</option>\n            <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\" >{{ user.last_name }} / {{ user.first_name }} /  {{ user.role }}</option>\n        </select>\n\n      <!-- CASE MANAGER  -->\n        <select v-on:change=\"selectedValueTeam($event)\" id=\"listTeams\" v-if=\"manager\">\n            <option>Choisissez une équipe</option>\n            <option v-for=\"team in myTeams\" :key=\"team.id\" :value=\"team.id\" >{{ team.name }}</option>\n        </select>\n        <br><br>\n        <select v-on:change=\"selectedValueM($event)\" id=\"listUsers\" v-if=\"manager\">\n            <option>Choisissez un utilisateur</option>\n            <option v-for=\"user in myUsersInfoUnique\" :key=\"user.id\" :value=\"user.id\" >{{ user.first_name }} / {{ user.last_name }} / {{ user.role }}</option>\n        </select>\n        <br>\n\n    <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Time Range\">\n      <center>\n      <b-card-text>\n        Start: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"start\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      <b-card-text>\n        End: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"end\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      </center>\n    </b-card>\n    <br/>\n    <center><b-button v-on:click=\"display\">Afficher le graph</b-button></center>\n    <div class=\"graph\" ref=\"chartdiv\"></div>\n    </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n    name: 'UserGraph',\n    components: {\n        DatePicker,\n        datetime\n    },\n    data() {\n        return {\n            // FOR ROLES\n            admin: null,\n            manager: null,\n\n            users: [],\n            allTeams: [],\n            myTeams: [],\n            myUsers: [],\n            myUsersInfo: [],\n            myUsersInfoUnique: [],\n\n            // FOR ALL\n            userId: null,\n            start: null,\n            end: null,\n            shortcuts: [\n            {\n                text: 'OK',\n                onClick: () => {\n                this.start = [new Date()],\n                this.end = [new Date()]\n                }\n            }],\n            timeOptions: {\n                start: '',\n                step: '',\n                end: ''\n            },\n            lang: {\n                days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n                months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],\n            }            \n        }\n    },\n    created() {\n        this.checkRole();\n        this.getUsers();\n        this.getMyTeams();\n    },\n    mounted() {\n        let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n        chart.data = [];\n        // XY\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = \"hours\";\n        series.dataFields.dateX = \"date\";\n        series.tooltipText = \"{value}\";\n        series.dataFields.value = \"hours\";\n        series.columns.template.width = am4core.percent(50);\n        series.tooltip.pointerOrientation = \"vertical\";\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.snapToSeries = series;\n        chart.cursor.xAxis = dateAxis;\n        //chart.scrollbarY = new am4core.Scrollbar();\n        chart.scrollbarX = new am4core.Scrollbar();\n        this.chart = chart; \n    },\n\n    beforeDestroy() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    },\n    methods: {\n        selectedValue(e) {\n            this.userId = e.target.value;\n        },\n\n        selectedValueM(e) {\n            this.userId = e.target.value;\n        },\n\n        selectedValueTeam(e) {\n            this.myUsersInfoUnique = [];\n            this.teamId = e.target.value;\n\n            axios.get('https://timepool.me:3001/api/teamscontent/team/' + this.teamId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.myUsers = response.data;\n                \n                for (var i = 0; i < this.myUsers.length; i++) {\n                    axios.get('https://timepool.me:3001/api/users/' + this.myUsers[i].employeeId, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                    .then((resp) => {\n                        this.myUsersInfoUnique.push(resp.data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        },\n\n        checkRole() {\n            if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n                this.admin = true;\n            } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager'){\n                this.manager = true;\n                this.admin = false;\n            } else {\n                this.admin = false;\n                this.manager = false;\n            }\n        },\n\n        getUsers() {\n            axios.get('https://timepool.me:3001/api/users', {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.users = response.data;\n                this.users.splice(0, 1);\n            })\n            .catch((errors) => {\n                console.log(errors);\n            })\n        },\n        getMyTeams() {\n            // GET ALL THE TEAMS\n            axios.get('https://timepool.me:3001/api/teams', {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.allTeams = response.data;\n\n                // GET MY TEAMS ONLY\n                for (var i = 0; i < this.allTeams.length; i++) {\n                    if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n                        this.myTeams.push(this.allTeams[i]);\n                    }\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        },\n\n        display() {\n            if (this.userId == null) {\n                Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Aucun employé n'a été sélectionné\",\n                        footer: 'Merci de réessayez'\n                    })\n            } else {\n                this.update_data();\n            }\n        },\n\n        update_data() {\n            var self = this;\n            var query = \"https://timepool.me:3001/api/workingtimes/user/\" +  this.userId\n            if (this.start != null && this.end != null) {\n                query += `?start=${this.start}&end=${this.end}`;\n            }\n            axios.get(query, {\n            headers: {Authorization: 'Bearer ' + localStorage.getItem('token')}\n            })\n            .then(function(result) {\n            var data = result.data;\n            var graphData = [];\n            var dailyHours = 0;\n            var index, obj;\n\n            for (var [index, obj] of data.entries()) {\n                var start = moment(obj.start);\n                var end = moment(obj.end);\n                dailyHours += end.diff(start, 'hours');\n                if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n                graphData.push({\n                    date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n                    hours: dailyHours\n                });\n                dailyHours = 0;\n                }\n            }\n            self.chart.data = graphData;\n            })\n        },\n    }\n}\n</script>\n\n<style>\n#listTeams, #listUsers {\n    width: 80%;\n    display: block;\n    margin: 0 auto;\n}\n.graph {\n  margin: auto;\n  width: 90%;\n  height: 500px;\n}\n</style>\n"],"sourceRoot":"src/pages"}]}
{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamManager.vue","mtime":1569870727465},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  name: \"TeamManager\",\n  data: function data() {\n    return {\n      // FOR ROLES\n      admin: false,\n      manager: false,\n      // FOR ADMIN\n      managers: [],\n      teams: [],\n      managerId: null,\n      // FOR MANAGER\n      myTeams: [],\n      // FOR ALL\n      users: [],\n      employees: [],\n      teamName: null,\n      teamId: null,\n      members: [],\n      exists: false\n    };\n  },\n  created: function created() {\n    this.checkRole();\n    this.getEmployeesAndManagers();\n    this.getTeams();\n  },\n  methods: {\n    checkRole: function checkRole() {\n      if (jwt_decode(localStorage.getItem(\"token\")).role == \"Administrator\") {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem(\"token\")).role == \"Manager\") {\n        this.admin = false;\n        this.manager = true;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n    getTeams: function getTeams() {\n      var _this = this;\n\n      axios.get('https://timepool.me:3001/api/teams', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        _this.teams = response.data; // CASE MANAGER\n\n        for (var i = 0; i < _this.teams.length; i++) {\n          if (_this.teams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n            _this.myTeams.push(_this.teams[i]);\n          }\n        }\n\n        if (_this.manager) {\n          _this.teams = _this.myTeams;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getEmployeesAndManagers: function getEmployeesAndManagers() {\n      var _this2 = this;\n\n      axios.get('https://timepool.me:3001/api/users', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(function (response) {\n        _this2.users = response.data;\n\n        _this2.users.splice(0, 1); // GET ONLY MANAGERS\n\n\n        for (var i = 0; i < _this2.users.length; i++) {\n          if (_this2.users[i].role == 'Manager') {\n            _this2.managers.push(_this2.users[i]);\n          }\n        } // GET ONLY EMPLOYEES\n\n\n        for (var j = 0; j < _this2.users.length; j++) {\n          if (_this2.users[j].role == 'Employee') {\n            _this2.employees.push(_this2.users[j]);\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    selectedValueManager: function selectedValueManager(e) {\n      console.log(e.target.value);\n      this.managerId = e.target.value;\n    },\n    selectedValueTeam: function selectedValueTeam(e) {\n      this.teamId = e.target.value;\n    },\n    addTeam: function addTeam() {\n      if (this.teamName != null && this.managerId != null) {\n        axios.post('https://timepool.me:3001/api/teams', {\n          name: this.teamName,\n          managerId: this.managerId\n        }, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          Swal.fire('Félicitation!', 'Equipe ajoutée avec succès', 'success');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (this.teamName == \"\" || this.teamName == null && this.managerId == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: \"Erreur: nom de l'équipe ou manager non renseigné\",\n          footer: 'Merci de réessayez</a>'\n        });\n      }\n    },\n    addToTeam: function addToTeam(id) {\n      var _this3 = this;\n\n      if (this.teamId == null) {\n        alert('Aucune équipe choisie');\n      } else {\n        // AVOIR LES EQUIPES A LAQUELLE APPARTIENT L EMPLOYE CHOISI\n        axios.get('https://timepool.me:3001/api/teamscontent/user/' + id, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          _this3.members = response.data;\n\n          for (var i = 0; i < _this3.members.length; i++) {\n            if (_this3.members[i].teamId == _this3.teamId) {\n              _this3.exists = true;\n              break;\n            }\n          }\n\n          if (!_this3.exists) {\n            axios.post('https://timepool.me:3001/api/teamscontent', {\n              teamId: _this3.teamId,\n              employeeId: id\n            }, {\n              headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n              }\n            }).then(function (r) {\n              Swal.fire('Félicitation!', 'Employé ajouté avec succès', 'success');\n            }).catch(function (e) {\n              Swal.fire({\n                type: 'error',\n                title: 'Erreur',\n                text: \"Erreur lors de l'ajout\",\n                footer: 'Merci de réessayez'\n              });\n            });\n          } else {\n            Swal.fire({\n              type: 'error',\n              title: 'Oops...',\n              text: 'Erreur: cet employé existe déjà dans cette équipe'\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n\n      this.members = [];\n      this.exists = false;\n    },\n    removeFromTeam: function removeFromTeam(id) {\n      var _this4 = this;\n\n      if (this.teamId == null) {\n        alert('Aucune équipe choisie');\n      } else {\n        // AVOIR LES EQUIPES A LAQUELLE APPARTIENT L EMPLOYE CHOISI\n        axios.get('https://timepool.me:3001/api/teamscontent/user/' + id, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          _this4.members = response.data;\n\n          for (var i = 0; i < _this4.members.length; i++) {\n            if (_this4.members[i].teamId == _this4.teamId) {\n              _this4.exists = true;\n              break;\n            }\n          }\n\n          if (_this4.exists) {\n            axios.delete('https://timepool.me:3001/api/teamscontent/team/' + _this4.teamId + '/user/' + id, {\n              headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n              }\n            }).then(function (r) {\n              Swal.fire('Félicitation!', \"Employé supprimé de l'équipe avec succès\", 'success');\n            }).catch(function (e) {\n              Swal.fire({\n                type: 'error',\n                title: 'Erreur',\n                text: \"Erreur lors de la suppression\",\n                footer: 'Merci de réessayez'\n              });\n            });\n          } else {\n            Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: \"Cet employé n'existe même pas dans cette équipe\",\n              footer: 'Merci de réessayez'\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n\n      this.members = [];\n      this.exists = false;\n    }\n  }\n};",{"version":3,"sources":["TeamManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n      <!-- AJOUT D'UNE EQUIPE QUE POUR L'ADMIN -->\n      <h3 class=\"mt-3 text-center\" v-if=\"admin\">Ajouter une équipe</h3>\n      <hr v-if=\"admin\">\n      <div class=\"row\" v-if=\"admin\">\n            <div class=\"col\">\n                <p class=\"text-center\">Nom de l'équipe</p>\n                <input type=\"text\" class=\"form-control\" v-model=\"teamName\" placeholder=\"Saisir le nom de l'équipe\" required>\n            </div>\n            <div class=\"w-100\"></div>\n            <div class=\"col\">\n                <br>\n                <p class=\"text-center\">L'affecter à un manager</p>\n                <select v-on:change=\"selectedValueManager($event)\" id=\"listManagers\" required>\n                    <option>Choisissez un manager</option>\n                    <option v-for=\"manager in managers\" :key=\"manager.id\" :value=\"manager.id\" >{{ manager.first_name }} {{ manager.last_name }}</option>\n                </select>\n            </div>\n      </div>\n      <center><button class=\"btn btn-info mt-2\" @click=\"addTeam\" v-if=\"admin\">Ajouter</button></center>\n      <hr v-if=\"admin\">\n      <!-- FIN DE L'AJOUT D'UNE EQUIPE QUI CONCERNE L'ADMIN -->\n\n      <table class=\"table table-striped table-hover table-reponsive\" style=\"widht: auto;\">\n        <thead>\n            <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Nom</th>\n            <th scope=\"col\">Prénom</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Role</th>\n            <th scope=\"col\">Options</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"employee in employees\" :key=\"employee.id\">\n                <td>{{ employee.id }}</td>\n                <td>{{ employee.last_name }}</td>\n                <td>{{ employee.first_name }}</td>\n                <td>{{ employee.email }}</td>\n                <td>{{ employee.role }}</td>\n                <td>\n                    <button v-on:click=\"addToTeam(employee.id)\">Ajouter à</button> | \n                    <button v-on:click=\"removeFromTeam(employee.id)\">Supprimer de </button> |\n                    <select v-on:change=\"selectedValueTeam($event)\"> \n                        <option>Choisissez une équipe</option>\n                        <option v-for=\"team in teams\" :key=\"team.id\" :value=\"team.id\" >{{ team.name }}</option>\n                    </select>\n                </td>\n            </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport jwt_decode from \"jwt-decode\";\n\nexport default {\n  name: \"TeamManager\",\n\n  data() {\n    return {\n      // FOR ROLES\n      admin: false,\n      manager: false,\n\n      // FOR ADMIN\n      managers: [],\n      teams: [],\n      managerId: null,\n\n      // FOR MANAGER\n      myTeams: [],\n\n      // FOR ALL\n      users: [],\n      employees: [],\n      teamName: null,\n      teamId: null,\n      members: [],\n      exists: false,\n\n      \n    };\n  },\n\n  created() {\n    this.checkRole();\n    this.getEmployeesAndManagers();\n    this.getTeams();\n  },\n\n  methods: {\n\n    checkRole() {\n      if (jwt_decode(localStorage.getItem(\"token\")).role == \"Administrator\") {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem(\"token\")).role == \"Manager\") {\n        this.admin = false;\n        this.manager = true;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n\n    getTeams() {\n        axios.get('https://timepool.me:3001/api/teams', {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n        .then((response) => {\n            this.teams = response.data;\n\n            // CASE MANAGER\n            for (var i = 0; i < this.teams.length; i++) {\n                if (this.teams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n                    this.myTeams.push(this.teams[i]);\n                }\n            }\n\n            if (this.manager) {\n                this.teams = this.myTeams;\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    },\n\n    getEmployeesAndManagers() {\n        axios.get('https://timepool.me:3001/api/users', {\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n        })\n        .then((response) => {\n            this.users = response.data;\n            this.users.splice(0, 1);\n\n            // GET ONLY MANAGERS\n            for (var i = 0; i < this.users.length; i++) {\n                if (this.users[i].role == 'Manager') {\n                    this.managers.push(this.users[i]);\n                }\n            }\n\n            // GET ONLY EMPLOYEES\n            for (var j = 0; j < this.users.length; j++) {\n                if (this.users[j].role == 'Employee') {\n                    this.employees.push(this.users[j]);\n                }\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    },\n\n    selectedValueManager(e) {\n        console.log(e.target.value);\n        this.managerId = e.target.value;\n    },\n\n    selectedValueTeam(e) {\n        this.teamId = e.target.value;\n    },\n\n    addTeam() {\n        if (this.teamName != null && this.managerId != null) {\n            axios.post('https://timepool.me:3001/api/teams', {name: this.teamName, managerId: this.managerId}, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                Swal.fire(\n                    'Félicitation!',\n                    'Equipe ajoutée avec succès',\n                    'success'\n                )\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        } else if (this.teamName == \"\" || this.teamName == null && this.managerId == null){\n            Swal.fire({\n                type: 'error',\n                title: 'Oops...',\n                text: \"Erreur: nom de l'équipe ou manager non renseigné\",\n                footer: 'Merci de réessayez</a>'\n            })\n        }\n    },\n\n    addToTeam(id) {\n        if (this.teamId == null) {\n            alert('Aucune équipe choisie');\n        } else {\n\n            // AVOIR LES EQUIPES A LAQUELLE APPARTIENT L EMPLOYE CHOISI\n            axios.get('https://timepool.me:3001/api/teamscontent/user/' + id, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.members = response.data;\n                for (var i = 0; i < this.members.length; i++) {\n                    if (this.members[i].teamId == this.teamId) {\n                        this.exists = true;\n                        break;\n                    }\n                }\n\n            if (!this.exists) {\n                axios.post('https://timepool.me:3001/api/teamscontent', {teamId: this.teamId, employeeId: id}, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then(r => {\n                    Swal.fire(\n                        'Félicitation!',\n                        'Employé ajouté avec succès',\n                        'success'\n                    )\n                })\n                .catch(e => {\n                    Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Erreur lors de l'ajout\",\n                        footer: 'Merci de réessayez'\n                    })\n                });\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Erreur: cet employé existe déjà dans cette équipe'\n                })\n            }\n                \n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n\n        this.members = [];\n        this.exists = false;\n    },\n\n    removeFromTeam(id){\n        if (this.teamId == null) {\n            alert('Aucune équipe choisie');\n        } else {\n            // AVOIR LES EQUIPES A LAQUELLE APPARTIENT L EMPLOYE CHOISI\n            axios.get('https://timepool.me:3001/api/teamscontent/user/' + id, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.members = response.data;\n                for (var i = 0; i < this.members.length; i++) {\n                    if (this.members[i].teamId == this.teamId) {\n                        this.exists = true;\n                        break;\n                    }\n                }\n\n            if (this.exists) {\n                axios.delete('https://timepool.me:3001/api/teamscontent/team/' + this.teamId + '/user/' + id, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then(r => {\n                    Swal.fire(\n                        'Félicitation!',\n                        \"Employé supprimé de l'équipe avec succès\",\n                        'success'\n                    )\n                })\n                .catch(e => {\n                    Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Erreur lors de la suppression\",\n                        footer: 'Merci de réessayez'\n                    })\n                });\n            } else {\n                Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Cet employé n'existe même pas dans cette équipe\",\n                        footer: 'Merci de réessayez'\n                })\n            }\n                \n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        }\n\n        this.members = [];\n        this.exists = false;\n    }\n  }\n}\n</script>\n\n<style>\n#listManagers {\n  width: 40%;\n  display: block;\n  margin: 0 auto;\n}\n\n#listTeams {\n    width: 40px;\n}\n</style>\n"],"sourceRoot":"src/pages"}]}
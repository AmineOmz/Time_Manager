{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/thread-loader/dist/cjs.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TimeManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TimeManager.vue","mtime":1569484651386},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.date.to-iso-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport { setInterval, clearInterval } from 'timers';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport datetime from 'vuejs-datetimepicker';\nimport jwt_decode from 'jwt-decode';\nexport default {\n  name: 'TimeManager',\n  components: {\n    datetime: datetime\n  },\n  data: function data() {\n    return {\n      today: moment().format('LLLL'),\n      interval: null,\n      chrono: null,\n      arrival: null,\n      departure: null,\n      statusClock: false,\n      finalChrono: null,\n      setDeparture: null,\n      setArrival: null,\n      clocks: {\n        status: '',\n        time: ''\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    postClock: function postClock() {\n      var _this = this;\n\n      if (this.chrono == null) {\n        this.statusClock = true;\n        var now = moment.now();\n        this.arrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n        this.clocks = {\n          status: true,\n          time: moment().toISOString().substring(0, moment().toISOString().length - 1)\n        };\n        console.log(this.clocks.time);\n        axios.patch('http://localhost:3000/api/clocks/user/' + jwt_decode(localStorage.getItem('token')).id, this.clocks, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        this.interval = setInterval(function () {\n          _this.chrono = moment(moment().diff(now)).format(\"HH:mm:ss\");\n        }, 1000);\n      } else {\n        this.finalChrono = this.chrono;\n        this.chrono = null;\n        this.statusClock = false;\n        this.departure = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n        this.clocks = {\n          status: false,\n          time: moment().toISOString().substring(0, moment().toISOString().length - 1)\n        };\n        console.log(this.clocks.time);\n        axios.patch('http://localhost:3000/api/clocks/user/' + jwt_decode(localStorage.getItem('token')).id, this.clocks, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          console.log(response);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        clearInterval(this.interval);\n        Swal.fire(\"Vous avez travaillez \" + this.finalChrono + \" aujourd'hui\");\n      }\n    }\n  }\n};",{"version":3,"sources":["TimeManager.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <p> <b>&nbsp;&nbsp;&nbsp;{{ today }}</b></p>\n        <center><b-jumbotron header=\"Pointer\" lead=\"Pensez à pointer à votre arrivé, et dès votre départ\" class=\"center\" border-variant=\"dark\"><br>\n            <b-button variant=\"primary\" v-on:click=\"postClock\" v-if=\"!statusClock\">Démarrer</b-button>\n            <b-button variant=\"primary\" v-on:click=\"postClock\" v-if=\"statusClock\">{{chrono}} | stop</b-button><br><br>\n            <b><span class=\"float-left\">Arrivé(e): {{ arrival }}</span></b><b><span class=\"float-right\">Parti(e): {{ departure }}</span></b>\n        </b-jumbotron></center><br><br>\n        <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Récapitulatif horaire d'aujourd'hui\">\n            <b-card-text>\n                Arrivé(e): <datetime class=\"arrivalInput\" format=\"MM/DD/YYYY h:i:s\" width=\"300px\" v-model=\"setArrival\"></datetime>\n            </b-card-text>\n            <b-card-text>\n                Parti(e): <datetime format=\"MM/DD/YYYY h:i:s\" width=\"300px\" v-model=\"setDeparture\"></datetime>\n            </b-card-text>\n            <center><b-button href=\"#\" variant=\"primary\">Mettez à jours vos horaires</b-button></center>\n        </b-card>\n    </div>\n</template>\n\n<script>\n\nimport moment from 'moment';\nimport { setInterval, clearInterval } from 'timers';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport datetime from 'vuejs-datetimepicker';\nimport jwt_decode from 'jwt-decode';\nexport default {\n    \n    name: 'TimeManager',\n\n    components: {\n        datetime\n    },\n\n    data() {\n        return {\n            today: moment().format('LLLL'),\n            interval: null,\n            chrono: null,\n            arrival: null,\n            departure: null,\n            statusClock: false,\n            finalChrono: null,\n            setDeparture: null,\n            setArrival: null,\n            clocks: {\n                status: '',\n                time: ''\n            }\n        }\n    },\n    created(){\n    },\n    methods:{\n        postClock(){\n\n            if (this.chrono == null){\n\n                this.statusClock = true;\n                const now = moment.now();\n                this.arrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n                this.clocks = {\n                    status: true,\n                    time: moment().toISOString().substring(0, moment().toISOString().length -1)\n                };\n\n                console.log(this.clocks.time)\n                axios.patch('http://localhost:3000/api/clocks/user/' + jwt_decode(localStorage.getItem('token')).id,  this.clocks, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n                \n                this.interval = setInterval(()=> {\n                    this.chrono = moment(moment().diff(now)).format(\"HH:mm:ss\")\n                }, 1000);\n\n            }else {\n                this.finalChrono = this.chrono;\n                \n                this.chrono = null;\n                this.statusClock = false;\n                this.departure = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss')\n                   this.clocks = {\n                    status: false,\n                    time: moment().toISOString().substring(0, moment().toISOString().length -1)\n                };\n\n\n                console.log(this.clocks.time)\n                axios.patch('http://localhost:3000/api/clocks/user/' + jwt_decode(localStorage.getItem('token')).id,  this.clocks, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n\n                clearInterval(this.interval);\n                Swal.fire(\"Vous avez travaillez \" + this.finalChrono + \" aujourd'hui\");\n            }\n\n        }\n    }\n\n\n\n\n\n}\n</script>\n"],"sourceRoot":"src/pages"}]}
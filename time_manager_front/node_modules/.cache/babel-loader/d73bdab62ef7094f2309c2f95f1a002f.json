{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserManager.vue","mtime":1569854462237},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'UserManager',\n  data: function data() {\n    return {\n      users: [],\n      managers: [],\n      token: localStorage.getItem('token'),\n      teamName: '',\n      selected: null,\n      managerId: null,\n      team: {\n        name: '',\n        managerId: 0\n      }\n    };\n  },\n  created: function created() {\n    this.getUsersAndManagers();\n  },\n  methods: {\n    selectedValue: function selectedValue(e) {\n      this.managerId = e.target.value;\n    },\n    getUsersAndManagers: function getUsersAndManagers() {\n      var _this = this;\n\n      axios.get('https://timepool.me:3001/api/users', {\n        headers: {\n          Authorization: 'Bearer ' + this.token\n        }\n      }).then(function (response) {\n        // RETRIEVE USERS\n        _this.users = response.data;\n\n        _this.users.splice(0, 1);\n\n        _this.total = _this.users.length; // RETRIEVE MANAGERS\n\n        for (var i = 0; i < _this.users.length; i++) {\n          if (_this.users[i].role == 'Manager') {\n            _this.managers.push(_this.users[i]);\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    deleting: function deleting(id) {\n      var _this2 = this;\n\n      Swal.fire({\n        title: 'Êtes vous sûr de vouloir supprimer cet utilisateur ?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Oui supprimer'\n      }).then(function (result) {\n        if (result.value) {\n          axios.delete('https://timepool.me:3001/api/users/' + id, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          }).then(function (response) {\n            _this2.getUsers();\n\n            Swal.fire('Supprimé!', 'success');\n          }).catch(function (err) {\n            Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: 'Suppression impossible'\n            });\n            console.log(err);\n          });\n        }\n      });\n    },\n    promote: function promote(id, first_name, role) {\n      var _this3 = this;\n\n      if (role == 'Manager') {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: first_name + ' est déjà Manager'\n        });\n      } else {\n        axios.patch('https://timepool.me:3001/api/users/' + id, {\n          role: 'Manager'\n        }, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (response) {\n          _this3.getUsersAndManagers();\n\n          Swal.fire('Félicitation!', first_name + ' est devenu(e) Manager', 'success');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["UserManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,IANA;AAOA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA;AAFA;AAPA,KAAA;AAYA,GAhBA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,mBAAA;AACA,GApBA;AAsBA,EAAA,OAAA,EAAA;AAEA,IAAA,aAFA,yBAEA,CAFA,EAEA;AACA,WAAA,SAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAJA;AAMA,IAAA,mBANA,iCAMA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,oCAAA,EAAA;AAAA,QAAA,OAAA,EAAA;AACA,UAAA,aAAA,EAAA,YAAA,KAAA;AADA;AAAA,OAAA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAJA,CAMA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,IAAA,SAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,OAdA,EAcA,KAdA,CAcA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAhBA;AAiBA,KAxBA;AA0BA,IAAA,QA1BA,oBA0BA,EA1BA,EA0BA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,KAAA,EAAA,sDADA;AAEA,QAAA,IAAA,EAAA,SAFA;AAGA,QAAA,gBAAA,EAAA,IAHA;AAIA,QAAA,kBAAA,EAAA,SAJA;AAKA,QAAA,iBAAA,EAAA,MALA;AAMA,QAAA,iBAAA,EAAA;AANA,OAAA,EAOA,IAPA,CAOA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,wCAAA,EAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,aAAA,EAAA,YAAA,YAAA,CAAA,OAAA,CAAA,OAAA;AADA;AADA,WAAA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,QAAA;;AACA,YAAA,IAAA,CAAA,IAAA,CACA,WADA,EAEA,SAFA;AAIA,WAVA,EAUA,KAVA,CAUA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,OADA;AAEA,cAAA,KAAA,EAAA,QAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;AAKA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WAjBA;AAkBA;AACA,OA5BA;AA6BA,KAxDA;AA0DA,IAAA,OA1DA,mBA0DA,EA1DA,EA0DA,UA1DA,EA0DA,IA1DA,EA0DA;AAAA;;AACA,UAAA,IAAA,IAAA,SAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,KAAA,EAAA,QAFA;AAGA,UAAA,IAAA,EAAA,UAAA,GAAA;AAHA,SAAA;AAKA,OANA,MAMA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,wCAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,YAAA,aAAA,EAAA,YAAA,YAAA,CAAA,OAAA,CAAA,OAAA;AADA;AADA,SAAA,EAKA,IALA,CAKA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,mBAAA;;AACA,UAAA,IAAA,CAAA,IAAA,CACA,eADA,EAEA,UAAA,GAAA,wBAFA,EAGA,SAHA;AAKA,SAZA,EAaA,KAbA,CAaA,UAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,SAfA;AAgBA;AAEA;AApFA;AAtBA,CAAA","sourcesContent":["<template>\n    <div>\n        <table class=\"table table-striped table-hover table-reponsive\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom</th>\n                <th scope=\"col\">Prénom</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"{id, last_name, first_name, email, role} in users\" :key=\"id\">\n                <td><b>{{ id }}</b></td>\n                <td><b>{{ last_name }}</b></td>\n                <td><b>{{ first_name }}</b></td>\n                <td><b>{{ email }}</b></td>\n                <td><b>{{ role }}</b></td>\n                <td><button v-on:click=\"promote(id, first_name, role)\">Promouvoir</button> | <button v-on:click=\"deleting(id)\">Supprimer</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nexport default {\n    name: 'UserManager',\n\n    data() {\n        return {\n            users: [],\n            managers: [],\n            token: localStorage.getItem('token'),\n            teamName: '',\n            selected: null,\n            managerId: null,\n            team: {\n                name: '',\n                managerId: 0\n            }\n        }\n    },\n\n    created() {\n        this.getUsersAndManagers();\n    },\n\n    methods: {\n\n        selectedValue(e) {\n            this.managerId = e.target.value;\n        },\n\n        getUsersAndManagers() {\n            axios.get('https://timepool.me:3001/api/users', {headers: {\n                Authorization: 'Bearer ' + this.token\n            }}).then((response) => {\n                // RETRIEVE USERS\n                this.users = response.data;\n                this.users.splice(0, 1);\n                this.total = this.users.length;\n\n                // RETRIEVE MANAGERS\n                for (var i = 0; i < this.users.length; i++) {\n                    if (this.users[i].role == 'Manager') {\n                        this.managers.push(this.users[i]);\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        deleting(id) {\n            Swal.fire({\n                title: 'Êtes vous sûr de vouloir supprimer cet utilisateur ?',\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Oui supprimer'\n                }).then((result) => {\n                if (result.value) {\n                    axios.delete('https://timepool.me:3001/api/users/' + id, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                        this.getUsers();\n                        Swal.fire(\n                            'Supprimé!',\n                            'success'\n                        )\n                    }).catch(err => {\n                        Swal.fire({\n                            type: 'error',\n                            title: 'Erreur',\n                            text: 'Suppression impossible'\n                        })\n                        console.log(err);\n                    });\n                }\n            })\n        },\n\n        promote(id, first_name, role) {\n            if (role == 'Manager') {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Erreur',\n                    text: first_name + ' est déjà Manager'\n                });\n            } else {\n                axios.patch('https://timepool.me:3001/api/users/' + id, {role: 'Manager'}, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }   \n                })\n                .then((response) => {\n                    this.getUsersAndManagers();\n                    Swal.fire(\n                        'Félicitation!',\n                        first_name + ' est devenu(e) Manager',\n                        'success'\n                    )\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n            }\n            \n        },\n    }\n}\n</script>\n"],"sourceRoot":"src/pages"}]}
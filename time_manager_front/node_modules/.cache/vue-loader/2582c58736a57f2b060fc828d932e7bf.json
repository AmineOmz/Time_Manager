{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamManager.vue","mtime":1569546034470},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n    name: 'TeamManager',\n\n    data() {\n        return {\n            admin: false,\n            manager: false,\n            users: [],\n            teams: [],\n            myTeams: [],\n            employees: [],\n            myEmployees: [],\n            myEmployeesInfo: [],\n            toAdd: null,\n            toRemove: null,\n            teamId: null,\n            teamsEmployee: [],\n            into: false\n        }\n    },\n\n    created() {\n        this.checkRole();\n        this.getEmployees();\n        this.getTeams();\n    },\n\n    methods: {\n\n        checkRole() {\n            if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n                this.admin = true;\n                this.manager = false;\n            } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n                this.admin = false;\n                this.manager = true;\n            } else {\n                this.admin = false;\n                this.manager = false;\n            }\n        },\n\n        getEmployees() {\n            axios.get('http://localhost:3000/api/users', {headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }}).then((response) => {\n                // RETRIEVE USERS\n                this.users = response.data;\n                this.users.splice(0, 1);\n                this.total = this.users.length;\n\n                // RETRIEVE EMPLOYEES\n                for (var i = 0; i < this.users.length; i++) {\n                    if (this.users[i].role == 'Employee') {\n                        this.employees.push(this.users[i]);\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        getTeams() {\n            axios.get('http://localhost:3000/api/teams', {headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }}).then((response) => {\n\n                // CHECK IF ADMIN OR MANAGER\n                if (this.admin) {\n                    this.teams = response.data;\n                } else if (this.manager) {\n                    this.teams = response.data;\n                    for (var i = 0; i < this.teams.length; i++) {\n                        if (this.teams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n                            this.myTeams.push(this.teams[i]);\n                        }\n                    }\n\n                    console.log('MY ');\n                    console.log(this.myTeams);\n\n                    // RETRIEVES MY EMPLOYEES\n                    for (var j = 0; j < this.myTeams.length; j++) {\n                        axios.get('http://localhost:3000/api/teamscontent/team/' + this.myTeams[j].id, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            for (var k = 0; k < response.data.length; k++) {\n                                this.myEmployees.push(response.data[k]);\n                            }\n\n                            console.log('MY EMP ');\n                            console.log(this.myEmployees);\n\n                            for (var l = 0; l < this.myEmployees.length; l++) {\n                                axios.get('http://localhost:3000/api/users/' + this.myEmployees[l].employeeId, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                .then((resp) => {\n                                    for (var m = 0; m < resp.data.length; m++) {\n                                        this.myEmployeesInfo.push(resp.data[m]);\n                                    }\n                                    console.log('MY EMP INFO');\n                                    console.log(this.myEmployeesInfo);\n                                })\n                                .catch((err) => {\n                                    console.log(err);\n                                });\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n                \n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        addToTeam(employeeId) {\n            this.teamId = this.toAdd.substring(0, 1);\n\n            console.log('teams id: ' + this.teamId + \" employeeId: \" + employeeId);\n\n            // VERIFIER S'IL A DEJA UNE TEAM\n            axios.get('http://localhost:3000/api/teamscontent/user/' + employeeId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.teamsEmployee = response.data;\n\n                if (this.teamsEmployee.length == 0) {\n                    axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                    .then((response) => {\n                        console.log('ADDED');\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n                } else {\n                    for (var i = 0; i < this.teamsEmployee.length; i++){\n                        if (this.teamsEmployee[i].teamId == this.teamId) {\n                            this.into = true;\n                        }\n                    }\n\n                    if (this.into) {\n                        alert('Cet user existe déjà dans cette équipe');\n                    } else {\n                        axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            console.log('ADDED');\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        },\n\n        removeFromTeam(employeeId) {\n            this.teamId = this.toRemove.substring(0, 1);\n            console.log('teams id: ' + this.teamId + \" employeeId: \" + employeeId);\n\n            // VERIFIER S'IL A DEJA UNE TEAM\n            \n            /*axios.get('http://localhost:3000/api/teamscontent/user/' + employeeId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.teamsEmployee = response.data;\n\n                if (this.teamsEmployee.length == 0) {\n                    alert('Erreur: cet utilisateur n a aucune équipe');\n                } else {\n                    for (var i = 0; i < this.teamsEmployee.length; i++){\n                        if (this.teamsEmployee[i].teamId == this.teamId) {\n                            axios.delete('http://localhost:3000/api/')\n                        }\n                    }\n\n                    if (this.into) {\n                        alert('Cet user existe déjà dans cette équipe');\n                    } else {\n                        axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            console.log('ADDED');\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });*/\n        }\n        \n    }\n}\n",{"version":3,"sources":["TeamManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"TeamManager.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        <!-- FOR ADMIN -->\n        <table class=\"table table-striped table-hover\" v-if=\"admin\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom</th>\n                <th scope=\"col\">Prénom</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Ajouter à l'équipe</th>\n                <th scope=\"col\">Supprimer de l'équipe</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"{id, last_name, first_name, email, role} in employees\" :key=\"id\">\n                    <td><b>{{ id }}</b></td>\n                    <td><b>{{ last_name }}</b></td>\n                    <td><b>{{ first_name }}</b></td>\n                    <td><b>{{ email }}</b></td>\n                    <td><b>{{ role }}</b></td>\n                    <td>\n                        <select v-model=\"toAdd\">\n                            <option value=\"\">Choisissez</option>\n                            <option v-for=\"team in teams\" :key=\"team.id\">{{ team.id }} | {{ team.name }}</option>\n                        </select>&nbsp;\n                        <button v-on:click=\"addToTeam(id)\">Ajouter</button>\n                    </td>\n                    <td>\n                        <select v-model=\"toRemove\">\n                            <option value=\"\">Choisissez</option>\n                            <option v-for=\"team in teams\" :key=\"team.id\">{{ team.id }} | {{ team.name }}</option>\n                        </select>&nbsp;\n                        <button v-on:click=\"removeFromTeam(id)\">Supprimer</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <!-- FOR MANAGER -->\n        <table class=\"table table-striped table-hover\" v-if=\"manager\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom</th>\n                <th scope=\"col\">Prénom</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Ajouter à l'équipe</th>\n                <th scope=\"col\">Supprimer de l'équipe</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"myEmployeeInfo in myEmployeesInfo\" :key=\"myEmployeeInfo.id\">\n                    <td><b>{{ myEmployeeInfo.id }}</b></td>\n                    <td><b>{{ myEmployeeInfo.last_name }}</b></td>\n                    <td><b>{{ myEmployeeInfo.first_name }}</b></td>\n                    <td><b>{{ myEmployeeInfo.email }}</b></td>\n                    <td><b>{{ myEmployeeInfo.role }}</b></td>\n                    <td>\n                        <select v-model=\"toAdd\">\n                            <option value=\"\">Choisissez</option>\n                            <option v-for=\"myTeam in myTeams\" :key=\"myTeam.id\">{{ myTeam.id }} | {{ myTeam.name }}</option>\n                        </select>&nbsp;\n                        <button v-on:click=\"addToTeam(myEmployeeInfo.id)\">Ajouter</button>\n                    </td>\n                    <td>\n                        <select v-model=\"toRemove\">\n                            <option value=\"\">Choisissez</option>\n                            <option v-for=\"myTeam in myTeams\" :key=\"myTeam.id\">{{ myTeam.id }} | {{ myTeam.name }}</option>\n                        </select>&nbsp;\n                        <button v-on:click=\"removeFromTeam(myEmployeeInfo.id)\">Supprimer</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n    name: 'TeamManager',\n\n    data() {\n        return {\n            admin: false,\n            manager: false,\n            users: [],\n            teams: [],\n            myTeams: [],\n            employees: [],\n            myEmployees: [],\n            myEmployeesInfo: [],\n            toAdd: null,\n            toRemove: null,\n            teamId: null,\n            teamsEmployee: [],\n            into: false\n        }\n    },\n\n    created() {\n        this.checkRole();\n        this.getEmployees();\n        this.getTeams();\n    },\n\n    methods: {\n\n        checkRole() {\n            if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n                this.admin = true;\n                this.manager = false;\n            } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n                this.admin = false;\n                this.manager = true;\n            } else {\n                this.admin = false;\n                this.manager = false;\n            }\n        },\n\n        getEmployees() {\n            axios.get('http://localhost:3000/api/users', {headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }}).then((response) => {\n                // RETRIEVE USERS\n                this.users = response.data;\n                this.users.splice(0, 1);\n                this.total = this.users.length;\n\n                // RETRIEVE EMPLOYEES\n                for (var i = 0; i < this.users.length; i++) {\n                    if (this.users[i].role == 'Employee') {\n                        this.employees.push(this.users[i]);\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        getTeams() {\n            axios.get('http://localhost:3000/api/teams', {headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token')\n            }}).then((response) => {\n\n                // CHECK IF ADMIN OR MANAGER\n                if (this.admin) {\n                    this.teams = response.data;\n                } else if (this.manager) {\n                    this.teams = response.data;\n                    for (var i = 0; i < this.teams.length; i++) {\n                        if (this.teams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n                            this.myTeams.push(this.teams[i]);\n                        }\n                    }\n\n                    console.log('MY ');\n                    console.log(this.myTeams);\n\n                    // RETRIEVES MY EMPLOYEES\n                    for (var j = 0; j < this.myTeams.length; j++) {\n                        axios.get('http://localhost:3000/api/teamscontent/team/' + this.myTeams[j].id, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            for (var k = 0; k < response.data.length; k++) {\n                                this.myEmployees.push(response.data[k]);\n                            }\n\n                            console.log('MY EMP ');\n                            console.log(this.myEmployees);\n\n                            for (var l = 0; l < this.myEmployees.length; l++) {\n                                axios.get('http://localhost:3000/api/users/' + this.myEmployees[l].employeeId, {\n                                    headers: {\n                                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                                    }\n                                })\n                                .then((resp) => {\n                                    for (var m = 0; m < resp.data.length; m++) {\n                                        this.myEmployeesInfo.push(resp.data[m]);\n                                    }\n                                    console.log('MY EMP INFO');\n                                    console.log(this.myEmployeesInfo);\n                                })\n                                .catch((err) => {\n                                    console.log(err);\n                                });\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n                \n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        addToTeam(employeeId) {\n            this.teamId = this.toAdd.substring(0, 1);\n\n            console.log('teams id: ' + this.teamId + \" employeeId: \" + employeeId);\n\n            // VERIFIER S'IL A DEJA UNE TEAM\n            axios.get('http://localhost:3000/api/teamscontent/user/' + employeeId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.teamsEmployee = response.data;\n\n                if (this.teamsEmployee.length == 0) {\n                    axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                    .then((response) => {\n                        console.log('ADDED');\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n                } else {\n                    for (var i = 0; i < this.teamsEmployee.length; i++){\n                        if (this.teamsEmployee[i].teamId == this.teamId) {\n                            this.into = true;\n                        }\n                    }\n\n                    if (this.into) {\n                        alert('Cet user existe déjà dans cette équipe');\n                    } else {\n                        axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            console.log('ADDED');\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        },\n\n        removeFromTeam(employeeId) {\n            this.teamId = this.toRemove.substring(0, 1);\n            console.log('teams id: ' + this.teamId + \" employeeId: \" + employeeId);\n\n            // VERIFIER S'IL A DEJA UNE TEAM\n            \n            /*axios.get('http://localhost:3000/api/teamscontent/user/' + employeeId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.teamsEmployee = response.data;\n\n                if (this.teamsEmployee.length == 0) {\n                    alert('Erreur: cet utilisateur n a aucune équipe');\n                } else {\n                    for (var i = 0; i < this.teamsEmployee.length; i++){\n                        if (this.teamsEmployee[i].teamId == this.teamId) {\n                            axios.delete('http://localhost:3000/api/')\n                        }\n                    }\n\n                    if (this.into) {\n                        alert('Cet user existe déjà dans cette équipe');\n                    } else {\n                        axios.post('http://localhost:3000/api/teamscontent', {teamId: this.teamId, employeeId: employeeId}, {\n                            headers: {\n                                Authorization: 'Bearer ' + localStorage.getItem('token')\n                            }\n                        })\n                        .then((response) => {\n                            console.log('ADDED');\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        });\n                    }\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });*/\n        }\n        \n    }\n}\n</script>\n"]}]}
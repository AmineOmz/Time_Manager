{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/mdbvue/src/components/Plugins/Rating.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/mdbvue/src/components/Plugins/Rating.vue","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import classNames from \"classnames\";\r\nimport { mdbIcon } from \"../Content/Fa\";\r\nimport { mdbTooltip } from \"../Advanced/Tooltip\";\r\nimport { mdbPopover } from \"../Advanced/Popover\";\r\nimport { mdbTextarea } from \"../Forms/MdTextarea\";\r\nimport { mdbBtn } from \"../Components/Button\";\r\n\r\nconst Rating = {\r\n  components: {\r\n    mdbIcon,\r\n    mdbTooltip,\r\n    mdbPopover,\r\n    mdbTextarea,\r\n    mdbBtn\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"div\"\r\n    },\r\n    feedback: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"star\"\r\n    },\r\n    iconClass: {\r\n      type: String,\r\n      default: \"grey-text\"\r\n    },\r\n    iconActiveClass: {\r\n      type: String,\r\n      default: \"yellow-text\"\r\n    },\r\n    value: Number,\r\n    far: Boolean,\r\n    fab: Boolean,\r\n    fal: Boolean,\r\n    fad: Boolean,\r\n    activeFar: Boolean,\r\n    activeFab: Boolean,\r\n    activeFal: Boolean,\r\n    activeFad: Boolean,\r\n    options: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            feedback: \"Very bad\"\r\n          },\r\n          {\r\n            feedback: \"Poor\"\r\n          },\r\n          {\r\n            feedback: \"OK\"\r\n          },\r\n          {\r\n            feedback: \"Good\"\r\n          },\r\n          {\r\n            feedback: \"Excellent\"\r\n          }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ratings: [],\r\n      active: -1,\r\n      rateValue: -1,\r\n      showModal: false,\r\n      closePopover: null,\r\n      feedbackMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    updateRating(i) {\r\n      this.active = i;\r\n    },\r\n    clearRating() {\r\n      this.active = this.rateValue > -1 ? this.rateValue : -1;\r\n    },\r\n    rate(index) {\r\n      this.$emit(\"input\", index + 1);\r\n      this.rateValue = index;\r\n    },\r\n    forceClosePopover() {\r\n      this.closePopover = true;\r\n      setTimeout(() => {\r\n        this.closePopover = false;\r\n      });\r\n    },\r\n    submitFeedback() {\r\n      if (this.feedbackMessage !== '') {\r\n        this.$emit('submit', this.feedbackMessage);\r\n        this.forceClosePopover();\r\n      }\r\n      this.feedbackMessage = '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ratings = this.options.map(rating => {\r\n      let icon = rating.icon || this.icon;\r\n      let iconActiveClass = rating.iconActiveClass || this.iconActiveClass;\r\n      let far = rating.far || this.activeFar;\r\n      let fab = rating.fab || this.activeFab;\r\n      let fal = rating.fal || this.activeFal;\r\n      let fad = rating.fad || this.activeFad;\r\n      let feedback = rating.feedback || \"\";\r\n      return { icon, iconActiveClass, far, fab, fal, fad, feedback };\r\n    });\r\n    \r\n    if (this.value) {\r\n      this.rateValue = this.value - 1;\r\n      this.active = this.value - 1;\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.rateValue = val - 1;\r\n      this.active = val - 1;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Rating;\r\nexport { Rating as mdbRating };\r\n",{"version":3,"sources":["Rating.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Rating.vue","sourceRoot":"node_modules/mdbvue/src/components/Plugins","sourcesContent":["<template>\r\n  <component :is=\"tag\" @mouseleave=\"clearRating\">\r\n    <mdb-popover\r\n      v-for=\"(rating, i) in ratings\"\r\n      :key=\"i\"\r\n      trigger=\"click\"\r\n      :options=\"{placement: 'top'}\"\r\n      :disabled=\"!feedback\"\r\n      :close=\"closePopover\"\r\n    >\r\n      <span slot=\"header\">{{rating.feedback}}</span>\r\n      <span\r\n        slot=\"body\"\r\n      >\r\n        <mdb-textarea v-model=\"feedbackMessage\" :rows=\"1\"/>\r\n        <mdb-btn size=\"sm\" color=\"primary\" @click=\"submitFeedback\">Submit!</mdb-btn>\r\n        <mdb-btn size=\"sm\" flat @click=\"forceClosePopover\">Close</mdb-btn>\r\n      </span> \r\n\r\n      <mdb-tooltip slot=\"reference\" trigger=\"hover\" :options=\"{placement: 'top'}\">\r\n        <span slot=\"tip\">{{rating.feedback}}</span>\r\n        <mdb-icon\r\n          slot=\"reference\"\r\n          :icon=\"(i <= active) || i <= rateValue ? ratings[active].icon : icon\"\r\n          :class=\"(i <= active) || i <= rateValue ? ratings[active].iconActiveClass : iconClass\"\r\n          class=\"p-1 rating-icon\"\r\n          :fal=\"(i <= active) || i <= rateValue ? ratings[active].fal : fal\"\r\n          :far=\"(i <= active) || i <= rateValue ? ratings[active].far : far\"\r\n          :fab=\"(i <= active) || i <= rateValue ? ratings[active].fab : fab\"\r\n          :fad=\"(i <= active) || i <= rateValue ? ratings[active].fad : fad\"\r\n          :ref=\"i\"\r\n          @mouseover.native=\"updateRating(i)\"\r\n          @click.native=\"rate(i)\"\r\n        ></mdb-icon>\r\n      </mdb-tooltip>\r\n      <!-- </span> -->\r\n    </mdb-popover>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\n// import classNames from \"classnames\";\r\nimport { mdbIcon } from \"../Content/Fa\";\r\nimport { mdbTooltip } from \"../Advanced/Tooltip\";\r\nimport { mdbPopover } from \"../Advanced/Popover\";\r\nimport { mdbTextarea } from \"../Forms/MdTextarea\";\r\nimport { mdbBtn } from \"../Components/Button\";\r\n\r\nconst Rating = {\r\n  components: {\r\n    mdbIcon,\r\n    mdbTooltip,\r\n    mdbPopover,\r\n    mdbTextarea,\r\n    mdbBtn\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"div\"\r\n    },\r\n    feedback: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    icon: {\r\n      type: String,\r\n      default: \"star\"\r\n    },\r\n    iconClass: {\r\n      type: String,\r\n      default: \"grey-text\"\r\n    },\r\n    iconActiveClass: {\r\n      type: String,\r\n      default: \"yellow-text\"\r\n    },\r\n    value: Number,\r\n    far: Boolean,\r\n    fab: Boolean,\r\n    fal: Boolean,\r\n    fad: Boolean,\r\n    activeFar: Boolean,\r\n    activeFab: Boolean,\r\n    activeFal: Boolean,\r\n    activeFad: Boolean,\r\n    options: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            feedback: \"Very bad\"\r\n          },\r\n          {\r\n            feedback: \"Poor\"\r\n          },\r\n          {\r\n            feedback: \"OK\"\r\n          },\r\n          {\r\n            feedback: \"Good\"\r\n          },\r\n          {\r\n            feedback: \"Excellent\"\r\n          }\r\n        ];\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ratings: [],\r\n      active: -1,\r\n      rateValue: -1,\r\n      showModal: false,\r\n      closePopover: null,\r\n      feedbackMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    updateRating(i) {\r\n      this.active = i;\r\n    },\r\n    clearRating() {\r\n      this.active = this.rateValue > -1 ? this.rateValue : -1;\r\n    },\r\n    rate(index) {\r\n      this.$emit(\"input\", index + 1);\r\n      this.rateValue = index;\r\n    },\r\n    forceClosePopover() {\r\n      this.closePopover = true;\r\n      setTimeout(() => {\r\n        this.closePopover = false;\r\n      });\r\n    },\r\n    submitFeedback() {\r\n      if (this.feedbackMessage !== '') {\r\n        this.$emit('submit', this.feedbackMessage);\r\n        this.forceClosePopover();\r\n      }\r\n      this.feedbackMessage = '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ratings = this.options.map(rating => {\r\n      let icon = rating.icon || this.icon;\r\n      let iconActiveClass = rating.iconActiveClass || this.iconActiveClass;\r\n      let far = rating.far || this.activeFar;\r\n      let fab = rating.fab || this.activeFab;\r\n      let fal = rating.fal || this.activeFal;\r\n      let fad = rating.fad || this.activeFad;\r\n      let feedback = rating.feedback || \"\";\r\n      return { icon, iconActiveClass, far, fab, fal, fad, feedback };\r\n    });\r\n    \r\n    if (this.value) {\r\n      this.rateValue = this.value - 1;\r\n      this.active = this.value - 1;\r\n    }\r\n  },\r\n  watch: {\r\n    value (val) {\r\n      this.rateValue = val - 1;\r\n      this.active = val - 1;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Rating;\r\nexport { Rating as mdbRating };\r\n</script>\r\n\r\n<style scoped>\r\n.rating-icon {\r\n  transition: all 0.2s linear;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}
{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserProfile/EditProfileForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserProfile/EditProfileForm.vue","mtime":1569853943775},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport router from '../../router/index'\n\nexport default {\n\n  name: \"EditProfileForm\",\n\n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  data() {\n    return {\n      errors: [],\n      currentUser: {},\n      user: {},\n      id: null,\n      lastname: null,\n      firstname: null,\n      email: null,\n      password: null,\n      created_at: null,\n      updated_at: null,\n      confirm_password: null,\n      canEdit: false,\n    };\n  },\n\n  created() {\n    this.fetchData();\n  },\n\n  methods: {\n    \n    fetchData() {\n      \n      axios.get('https://timepool.me:3001/api/users/' + jwt_decode(localStorage.getItem('token')).id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n          this.currentUser = response.data;\n          this.firstname = this.currentUser.first_name;\n          this.lastname = this.currentUser.last_name;\n          this.email = this.currentUser.email;\n          this.password = this.currentUser.password;\n          this.updated_at = this.currentUser.updatedAt;\n          this.created_at = this.currentUser.createdAt;\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n    },\n\n    edit() {\n\n      if (this.password == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: 'Veuillez saisir le mot de passe',\n          footer: 'Merci de réessayez'\n        });\n        return;\n      }\n\n      if (this.password != null) {\n        this.user.first_name = this.firstname;\n        this.user.last_name = this.lastname;\n        this.user.password = this.password;\n        this.user.email = this.email;\n\n        // ################## POST FOR GET JWT ###################\n        axios.post('https://timepool.me:3001/api/users/sign_in', {email: this.email, password: this.password}, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        })\n        .then((response) => {\n          if (response.data.token == null) {\n            alert('Mot de passe incorrect');\n            this.password = null;\n            return;\n          } else {\n            axios.put('https://timepool.me:3001/api/users/' + jwt_decode(localStorage.getItem('token')).id, this.user, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          })\n          .then((response) => {\n            Swal.fire(\n              'Félicitation',\n              'Profil mis à jour!',\n              'success'\n            );\n            return;\n          })\n          .catch((e) => {\n            Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: 'Mise à jour du compte impossible',\n              footer: 'Merci de réessayez'\n            });\n            console.log(e);\n          })\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n        // #################### END OF POST ######################\n      }\n        this.password = null;   \n    },\n\n    remove() {\n      // CAS ADMIN\n      var token = localStorage.getItem('token');\n\n      if (jwt_decode(token).id == 1) {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Vous ne pouvez pas supprimer votre compte, vous êtes Administrateur!'\n        })\n        this.password = null;\n        return;\n      }\n\n      if (jwt_decode(token).id != 1 && this.password == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: 'Veuillez saisir le mot de passe',\n          footer: 'Merci de réessayez'\n        });\n        return;\n      }\n\n      // ############### POST TO VERIFY IF EXISTS ################\n      if (jwt_decode(token).id != 1 && this.password != null) {\n        axios.post('https://timepool.me:3001/api/users/sign_in', {email: this.email, password: this.password}, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        })\n        .then((response) => {\n          if (response.data.token == null) {\n            this.password = null;\n            return;\n          } else {\n            axios.delete('https://timepool.me:3001/api/users/' + jwt_decode(token).id, {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            })\n            .then((resp) => {\n              Swal.fire(\n                'Supprimé',\n                'Votre compte a bien été supprimé',\n                'success'\n              )\n              localStorage.removeItem('token');\n              router.push('/login');\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["EditProfileForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"EditProfileForm.vue","sourceRoot":"src/pages/UserProfile","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header :data-background-color=\"dataBackgroundColor\">\n        <h4 class=\"title\">Editez votre profil</h4>\n        <p class=\"category\">Complétez votre profil</p>\n      </md-card-header>\n\n      <md-card-content>\n        <div class=\"md-layout\">\n          <div class=\"md-layout-item md-small-size-100 md-size-33\">\n            <md-field>\n              <label>Prénom</label>\n              <md-input v-model=\"firstname\" type=\"text\"></md-input>\n            </md-field>\n          </div>\n          <div class=\"md-layout-item md-small-size-100 md-size-50\">\n            <md-field>\n              <label>Nom</label>\n              <md-input v-model=\"lastname\" type=\"text\"></md-input>\n            </md-field>\n          </div>\n          <div class=\"md-layout-item md-small-size-100 md-size-100\">\n            <md-field>\n              <label>E-mail</label>\n              <md-input v-model=\"email\" type=\"text\"></md-input>\n            </md-field>\n          </div>\n          <div class=\"md-layout-item md-small-size-100 md-size-100\">\n            <md-field>\n              <label>Mot de passe</label>\n              <md-input v-model=\"password\" type=\"password\" required></md-input>\n            </md-field>\n          </div>\n          <div></div>\n          <div class=\"md-layout-item md-size-100 text-right\">\n            <md-button class=\"md-raised md-success\" v-on:click=\"edit\">Mettre à jour</md-button>\n          </div>\n          <div class=\"md-layout-item md-size-100 text-right\">\n            <md-button class=\"md-raised md-success\" v-on:click=\"remove\">Supprimer votre compte</md-button>\n          </div>\n        </div>\n      </md-card-content>\n    </md-card>\n  </form>\n</template>\n\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport router from '../../router/index'\n\nexport default {\n\n  name: \"EditProfileForm\",\n\n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  data() {\n    return {\n      errors: [],\n      currentUser: {},\n      user: {},\n      id: null,\n      lastname: null,\n      firstname: null,\n      email: null,\n      password: null,\n      created_at: null,\n      updated_at: null,\n      confirm_password: null,\n      canEdit: false,\n    };\n  },\n\n  created() {\n    this.fetchData();\n  },\n\n  methods: {\n    \n    fetchData() {\n      \n      axios.get('https://timepool.me:3001/api/users/' + jwt_decode(localStorage.getItem('token')).id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n          this.currentUser = response.data;\n          this.firstname = this.currentUser.first_name;\n          this.lastname = this.currentUser.last_name;\n          this.email = this.currentUser.email;\n          this.password = this.currentUser.password;\n          this.updated_at = this.currentUser.updatedAt;\n          this.created_at = this.currentUser.createdAt;\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n    },\n\n    edit() {\n\n      if (this.password == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: 'Veuillez saisir le mot de passe',\n          footer: 'Merci de réessayez'\n        });\n        return;\n      }\n\n      if (this.password != null) {\n        this.user.first_name = this.firstname;\n        this.user.last_name = this.lastname;\n        this.user.password = this.password;\n        this.user.email = this.email;\n\n        // ################## POST FOR GET JWT ###################\n        axios.post('https://timepool.me:3001/api/users/sign_in', {email: this.email, password: this.password}, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        })\n        .then((response) => {\n          if (response.data.token == null) {\n            alert('Mot de passe incorrect');\n            this.password = null;\n            return;\n          } else {\n            axios.put('https://timepool.me:3001/api/users/' + jwt_decode(localStorage.getItem('token')).id, this.user, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('token')\n            }\n          })\n          .then((response) => {\n            Swal.fire(\n              'Félicitation',\n              'Profil mis à jour!',\n              'success'\n            );\n            return;\n          })\n          .catch((e) => {\n            Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: 'Mise à jour du compte impossible',\n              footer: 'Merci de réessayez'\n            });\n            console.log(e);\n          })\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n        // #################### END OF POST ######################\n      }\n        this.password = null;   \n    },\n\n    remove() {\n      // CAS ADMIN\n      var token = localStorage.getItem('token');\n\n      if (jwt_decode(token).id == 1) {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Vous ne pouvez pas supprimer votre compte, vous êtes Administrateur!'\n        })\n        this.password = null;\n        return;\n      }\n\n      if (jwt_decode(token).id != 1 && this.password == null) {\n        Swal.fire({\n          type: 'error',\n          title: 'Erreur',\n          text: 'Veuillez saisir le mot de passe',\n          footer: 'Merci de réessayez'\n        });\n        return;\n      }\n\n      // ############### POST TO VERIFY IF EXISTS ################\n      if (jwt_decode(token).id != 1 && this.password != null) {\n        axios.post('https://timepool.me:3001/api/users/sign_in', {email: this.email, password: this.password}, {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        })\n        .then((response) => {\n          if (response.data.token == null) {\n            this.password = null;\n            return;\n          } else {\n            axios.delete('https://timepool.me:3001/api/users/' + jwt_decode(token).id, {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            })\n            .then((resp) => {\n              Swal.fire(\n                'Supprimé',\n                'Votre compte a bien été supprimé',\n                'success'\n              )\n              localStorage.removeItem('token');\n              router.push('/login');\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      }\n    }\n  }\n}\n\n</script>\n"]}]}
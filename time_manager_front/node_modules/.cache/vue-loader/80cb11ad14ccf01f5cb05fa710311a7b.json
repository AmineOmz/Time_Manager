{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TimeManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TimeManager.vue","mtime":1569418591780},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport moment from 'moment';\nimport { setInterval, clearInterval } from 'timers';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport datetime from 'vuejs-datetimepicker';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n    \n    name: 'TimeManager',\n\n    components: {\n        datetime\n    },\n\n    data() {\n        return {\n            today: moment().format('LLLL'),\n            interval: null,\n            chrono: null,\n            arrival: null,\n            departure: null,\n            statusClock: false,\n            finalChrono: null,\n            setDeparture: null,\n            setArrival: null\n        }\n    },\n    created(){\n\n    },\n    methods:{\n        postClock(){\n\n            axios.patch('http://localhost:3000/api/clocks/user/' + localStorage.getItem('id'), {\n                    status: true,\n                    time: \"un temps\"\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n\n                axios.patch('http://localhost:3000/api/clocks/user/' + localStorage.getItem('id'), {\n                    status: false,\n                    time: 'couou'\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n\n            if (this.chrono == null){\n\n                this.statusClock = true;\n                const now = moment.now();\n                this.arrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n                this.setArrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n                \n                this.interval = setInterval(()=> {\n                    this.chrono = moment(moment().diff(now)).format(\"HH:mm:ss\")\n                }, 1000);\n            }else {\n                this.finalChrono = this.chrono;\n                \n                this.chrono = null;\n                this.statusClock = false;\n                this.departure = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss')\n                this.setDeparture = this.departure\n                clearInterval(this.interval);\n                Swal.fire(\"Vous avez travaillez \" + this.finalChrono + \" aujourd'hui\");\n            }\n\n        },\n\n        getClock(){\n            axios.get('http://localhost:3000/api/clocks/'+localStorage.getItem('id'), {headers: {Autorization: \"Bearer \"+localStorage.getItem('token')}})\n            .then(res => console.log(res));\n        }\n    }\n\n\n\n\n\n}\n",{"version":3,"sources":["TimeManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAMA","file":"TimeManager.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        <p> <b>&nbsp;&nbsp;&nbsp;{{ today }}</b></p>\n        <center><b-jumbotron header=\"Pointer\" lead=\"Pensez à pointer à votre arrivé, et dès votre départ\" class=\"center\" border-variant=\"dark\"><br>\n            <b-button variant=\"primary\" v-on:click=\"postClock\" v-if=\"!statusClock\">Démarrer</b-button>\n            <b-button variant=\"primary\" v-on:click=\"postClock\" v-if=\"statusClock\">{{chrono}} | stop</b-button><br><br>\n            <b><span class=\"float-left\">Arrivé(e): {{ arrival }}</span></b><b><span class=\"float-right\">Parti(e): {{ departure }}</span></b>\n        </b-jumbotron></center><br><br>\n        <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Récapitulatif horaire d'aujourd'hui\">\n            <b-card-text>\n                Arrivé(e): <datetime format=\"MM/DD/YYYY h:i:s\" width=\"300px\" v-model=\"setArrival\"></datetime>\n            </b-card-text>\n            <b-card-text>\n                Parti(e): <datetime format=\"MM/DD/YYYY h:i:s\" width=\"300px\" v-model=\"setDeparture\"></datetime>\n            </b-card-text>\n            <center><b-button href=\"#\" variant=\"primary\">Mettez à jours vos horaires</b-button></center>\n        </b-card>\n    </div>\n</template>\n\n<script>\n\nimport moment from 'moment';\nimport { setInterval, clearInterval } from 'timers';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport datetime from 'vuejs-datetimepicker';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n    \n    name: 'TimeManager',\n\n    components: {\n        datetime\n    },\n\n    data() {\n        return {\n            today: moment().format('LLLL'),\n            interval: null,\n            chrono: null,\n            arrival: null,\n            departure: null,\n            statusClock: false,\n            finalChrono: null,\n            setDeparture: null,\n            setArrival: null\n        }\n    },\n    created(){\n\n    },\n    methods:{\n        postClock(){\n\n            axios.patch('http://localhost:3000/api/clocks/user/' + localStorage.getItem('id'), {\n                    status: true,\n                    time: \"un temps\"\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n\n                axios.patch('http://localhost:3000/api/clocks/user/' + localStorage.getItem('id'), {\n                    status: false,\n                    time: 'couou'\n                }, {\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n\n            if (this.chrono == null){\n\n                this.statusClock = true;\n                const now = moment.now();\n                this.arrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n                this.setArrival = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss');\n                \n                this.interval = setInterval(()=> {\n                    this.chrono = moment(moment().diff(now)).format(\"HH:mm:ss\")\n                }, 1000);\n            }else {\n                this.finalChrono = this.chrono;\n                \n                this.chrono = null;\n                this.statusClock = false;\n                this.departure = moment().lang('fr').format('DD/MM/YYYY HH:mm:ss')\n                this.setDeparture = this.departure\n                clearInterval(this.interval);\n                Swal.fire(\"Vous avez travaillez \" + this.finalChrono + \" aujourd'hui\");\n            }\n\n        },\n\n        getClock(){\n            axios.get('http://localhost:3000/api/clocks/'+localStorage.getItem('id'), {headers: {Autorization: \"Bearer \"+localStorage.getItem('token')}})\n            .then(res => console.log(res));\n        }\n    }\n\n\n\n\n\n}\n</script>\n"]}]}
{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue","mtime":1569875054487},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport DashboardLayout from '@/pages';\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n  name: 'TeamGraph',\n  components: {\n    DatePicker,\n    datetime\n  },\n  data() {\n    return {\n      admin: null,\n      manager: null,\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null',\n      teamId: null,\n      teamName: null,\n      managerId: null,\n      nameTeam: null,\n      start: null,\n      end: null,\n      shortcuts: [\n      {\n        text: 'OK',\n        onClick: () => {\n          this.start = [new Date()],\n          this.end = [new Date()]\n        }\n      }],\n      timeOptions: {\n        start: '',\n        step: '',\n        end: ''\n      },\n      lang: {\n        days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n        months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],\n      }\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n  created() {\n    this.checkRole();\n    this.getTeams();\n  },\n  mounted() {\n        let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n        chart.data = [];\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = \"hours\";\n        series.dataFields.dateX = \"date\";\n        series.tooltipText = \"{value}\";\n        series.dataFields.value = \"hours\";\n        series.columns.template.width = am4core.percent(50);\n        series.tooltip.pointerOrientation = \"vertical\";\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.snapToSeries = series;\n        chart.cursor.xAxis = dateAxis;\n        //chart.scrollbarY = new am4core.Scrollbar();\n        chart.scrollbarX = new am4core.Scrollbar();\n        this.chart = chart;\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    selectedValue(e){\n      this.teamId = e.target.value;\n    },\n    checkRole() {\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        this.manager = true;\n        this.admin = false;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n    getTeams() {\n      axios.get('https://timepool.me:3001/api/teams', {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n      })\n      .then((response) => {\n          this.allTeams = response.data;\n        if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n            this.myTeams = this.allTeams;\n        } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n            for (var i = 0; i < this.allTeams.length; i++) {\n            if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n              this.myTeams.push(this.allTeams[i]);\n            }\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      }) \n    },\n    display() {\n      if (this.teamId == null) {\n        Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Aucune équipe selectionnée\",\n                        footer: 'Merci de réessayez'\n                    })\n      } else {\n        this.update_data();\n      }\n    },\n  update_data() {\n    var self = this;\n    var graphData = [];\n    var query = \"https://timepool.me:3001/api/workingtimes/team/\" +  this.teamId\n    if (this.start != null && this.end != null) {\n      query += `?start=${this.start}&end=${this.end}`;\n    }\n    axios.get(query, {\n      headers: {Authorization: 'Bearer ' + localStorage.getItem('token')}\n    })\n    .then(function(result) {\n    var data = result.data;\n    var employees = [];\n    var dailyHours = 0;\n    var index, obj;\n    data.forEach(obj => {\n    if (!(obj.employeeId in employees)) {\n    employees.push(obj.employeeId);\n    }\n    });\n    for (var [index, obj] of data.entries()) {\n    var start = moment(obj.start);\n    var end = moment(obj.end);\n    dailyHours += end.diff(start, 'hours');\n    if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n      graphData.push({\n        date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n        hours: dailyHours / employees.length\n      });\n      dailyHours = 0;\n    }\n    }\n    self.chart.data = graphData\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  }\n};\n",{"version":3,"sources":["TeamGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"TeamGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <select v-on:change=\"selectedValue($event)\" v-if=\"admin\" id=\"listTeams\">\n        <option>Choisissez une équipe</option>\n        <option v-for=\"team in myTeams\" :key=\"team.id\" :value=\"team.id\" >{{ team.name }}</option>\n    </select>\n\n    <select v-on:change=\"selectedValue($event)\" v-if=\"manager\" id=\"listTeams\">\n        <option>Choisissez une équipe</option>\n        <option v-for=\"team in myTeams\" :key=\"team.id\" :value=\"team.id\" >{{ team.name }}</option>\n    </select>\n\n    <br><br>\n    <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Time Range\">\n      <center>\n      <b-card-text>\n        Start: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"start\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      <b-card-text>\n        End: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"end\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      </center>\n    </b-card>\n    <br/>\n    <center><b-button v-on:click=\"display\">Afficher le graphe</b-button></center>\n    <br/>\n    <div class=\"graph\" ref=\"chartdiv\"></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport DashboardLayout from '@/pages';\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n  name: 'TeamGraph',\n  components: {\n    DatePicker,\n    datetime\n  },\n  data() {\n    return {\n      admin: null,\n      manager: null,\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null',\n      teamId: null,\n      teamName: null,\n      managerId: null,\n      nameTeam: null,\n      start: null,\n      end: null,\n      shortcuts: [\n      {\n        text: 'OK',\n        onClick: () => {\n          this.start = [new Date()],\n          this.end = [new Date()]\n        }\n      }],\n      timeOptions: {\n        start: '',\n        step: '',\n        end: ''\n      },\n      lang: {\n        days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n        months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],\n      }\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n  created() {\n    this.checkRole();\n    this.getTeams();\n  },\n  mounted() {\n        let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n        chart.data = [];\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = \"hours\";\n        series.dataFields.dateX = \"date\";\n        series.tooltipText = \"{value}\";\n        series.dataFields.value = \"hours\";\n        series.columns.template.width = am4core.percent(50);\n        series.tooltip.pointerOrientation = \"vertical\";\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.snapToSeries = series;\n        chart.cursor.xAxis = dateAxis;\n        //chart.scrollbarY = new am4core.Scrollbar();\n        chart.scrollbarX = new am4core.Scrollbar();\n        this.chart = chart;\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    selectedValue(e){\n      this.teamId = e.target.value;\n    },\n    checkRole() {\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        this.manager = true;\n        this.admin = false;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n    getTeams() {\n      axios.get('https://timepool.me:3001/api/teams', {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n      })\n      .then((response) => {\n          this.allTeams = response.data;\n        if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n            this.myTeams = this.allTeams;\n        } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n            for (var i = 0; i < this.allTeams.length; i++) {\n            if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n              this.myTeams.push(this.allTeams[i]);\n            }\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      }) \n    },\n    display() {\n      if (this.teamId == null) {\n        Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Aucune équipe selectionnée\",\n                        footer: 'Merci de réessayez'\n                    })\n      } else {\n        this.update_data();\n      }\n    },\n  update_data() {\n    var self = this;\n    var graphData = [];\n    var query = \"https://timepool.me:3001/api/workingtimes/team/\" +  this.teamId\n    if (this.start != null && this.end != null) {\n      query += `?start=${this.start}&end=${this.end}`;\n    }\n    axios.get(query, {\n      headers: {Authorization: 'Bearer ' + localStorage.getItem('token')}\n    })\n    .then(function(result) {\n    var data = result.data;\n    var employees = [];\n    var dailyHours = 0;\n    var index, obj;\n    data.forEach(obj => {\n    if (!(obj.employeeId in employees)) {\n    employees.push(obj.employeeId);\n    }\n    });\n    for (var [index, obj] of data.entries()) {\n    var start = moment(obj.start);\n    var end = moment(obj.end);\n    dailyHours += end.diff(start, 'hours');\n    if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n      graphData.push({\n        date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n        hours: dailyHours / employees.length\n      });\n      dailyHours = 0;\n    }\n    }\n    self.chart.data = graphData\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  }\n};\n</script>\n\n<style>\n#listTeams {\n  width: 80%;\n  display: block;\n  margin: 0 auto;\n}\n.graph {\n  margin: auto;\n  width: 90%;\n  height: 500px;\n}\n</style>\n"]}]}
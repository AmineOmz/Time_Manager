{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/mdbvue/src/components/Navigation/NavbarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/mdbvue/src/components/Navigation/NavbarItem.vue","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport classNames from \"classnames\";\r\nimport waves from \"../../mixins/waves\";\r\nimport mdbIcon from \"../Content/Fa\";\r\n\r\nconst NavbarItem = {\r\n  components: {\r\n    mdbIcon\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"li\"\r\n    },\r\n    active: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean\r\n    },\r\n    exact: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    href: {\r\n      type: String\r\n    },\r\n    newTab: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    to: [String, Object],\r\n    waves: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    wavesFixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    anchorClass: {\r\n      type: String\r\n    },\r\n    icon: {\r\n      type: String\r\n    },\r\n    far: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fab: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fad: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fal: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isNavFixed: false\r\n    };\r\n  },\r\n  computed: {\r\n    className() {\r\n      return classNames(\"nav-item\", this.waves && \"ripple-parent\");\r\n    },\r\n    anchorClassName() {\r\n      return classNames(\r\n        {\r\n          \"nav-link\": true,\r\n          \"navbar-link\": true,\r\n          disabled: this.disabled,\r\n          active: this.active\r\n        },\r\n        this.anchorClass\r\n      );\r\n    },\r\n    tab() {\r\n      if (this.newTab) {\r\n        return \"_blank\";\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(e) {\r\n      this.$emit(\"click\", e);\r\n      this.wave(e);\r\n    }\r\n  },\r\n  mounted() {\r\n    let el = this.$refs.navItem;\r\n    while (el.parentNode) {\r\n      if (el.className.includes(\"fixed\")) {\r\n        this.isNavFixed = true;\r\n        break;\r\n      }\r\n      el = el.parentNode;\r\n    }\r\n  },\r\n  mixins: [waves]\r\n};\r\n\r\nexport default NavbarItem;\r\nexport { NavbarItem as mdbNavItem };\r\n",{"version":3,"sources":["NavbarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NavbarItem.vue","sourceRoot":"node_modules/mdbvue/src/components/Navigation","sourcesContent":["<template>\r\n  <component :is=\"tag\" :class=\"className\" @click=\"(e) => handleClick(e)\" ref=\"navItem\">\r\n    <router-link\r\n      tag=\"a\"\r\n      v-if=\"to\"\r\n      :exact=\"exact\"\r\n      active-class=\"active\"\r\n      exact-active-class=\"active\"\r\n      :class=\"anchorClassName\"\r\n      :to=\"to\"\r\n      :target=\"tab\"\r\n    >\r\n      <mdb-icon v-if=\"icon\" :far=\"far\" :fab=\"fab\" :fad=\"fad\" :fal=\"fal\" :icon=\"icon\" />\r\n      <span v-if=\"icon\" class=\"clearfix d-none d-sm-inline-block\">\r\n        <slot></slot>\r\n      </span>\r\n      <slot v-else></slot>\r\n    </router-link>\r\n    <a v-else :href=\"href\" :class=\"anchorClassName\" :target=\"tab\">\r\n      <mdb-icon v-if=\"icon\" :far=\"far\" :fab=\"fab\" :fad=\"fad\" :fal=\"fal\" :icon=\"icon\" />\r\n      <span v-if=\"icon\" class=\"clearfix d-none d-sm-inline-block\">\r\n        <slot></slot>\r\n      </span>\r\n      <slot v-else></slot>\r\n    </a>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport classNames from \"classnames\";\r\nimport waves from \"../../mixins/waves\";\r\nimport mdbIcon from \"../Content/Fa\";\r\n\r\nconst NavbarItem = {\r\n  components: {\r\n    mdbIcon\r\n  },\r\n  props: {\r\n    tag: {\r\n      type: String,\r\n      default: \"li\"\r\n    },\r\n    active: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean\r\n    },\r\n    exact: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    href: {\r\n      type: String\r\n    },\r\n    newTab: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    to: [String, Object],\r\n    waves: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    wavesFixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    anchorClass: {\r\n      type: String\r\n    },\r\n    icon: {\r\n      type: String\r\n    },\r\n    far: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fab: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fad: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fal: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isNavFixed: false\r\n    };\r\n  },\r\n  computed: {\r\n    className() {\r\n      return classNames(\"nav-item\", this.waves && \"ripple-parent\");\r\n    },\r\n    anchorClassName() {\r\n      return classNames(\r\n        {\r\n          \"nav-link\": true,\r\n          \"navbar-link\": true,\r\n          disabled: this.disabled,\r\n          active: this.active\r\n        },\r\n        this.anchorClass\r\n      );\r\n    },\r\n    tab() {\r\n      if (this.newTab) {\r\n        return \"_blank\";\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(e) {\r\n      this.$emit(\"click\", e);\r\n      this.wave(e);\r\n    }\r\n  },\r\n  mounted() {\r\n    let el = this.$refs.navItem;\r\n    while (el.parentNode) {\r\n      if (el.className.includes(\"fixed\")) {\r\n        this.isNavFixed = true;\r\n        break;\r\n      }\r\n      el = el.parentNode;\r\n    }\r\n  },\r\n  mixins: [waves]\r\n};\r\n\r\nexport default NavbarItem;\r\nexport { NavbarItem as mdbNavItem };\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}
{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/components/SidebarPlugin/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/components/SidebarPlugin/SideBar.vue","mtime":1569756635070},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SidebarLink from \"./SidebarLink.vue\";\n\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  data() {\n    return {\n       lastname: null,\n      firstname: null\n    }\n  },\n   created() {\n    this.getInfo();\n  },\n  methods: {\n      getInfo() {\n      \n      axios.get('http://localhost:3000/api/users/' + jwt_decode(localStorage.getItem('token')).id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n          this.currentUser = response.data;\n          this.firstname = this.currentUser.first_name;\n          this.lastname = this.currentUser.last_name;\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n    }\n  },\n\n  components: {\n    SidebarLink\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"RED\"\n    },\n    backgroundImage: {\n      type: String,\n      default: require(\"@/assets/img/back_side_2.png\")\n    },\n    imgLogo: {\n      type: String,\n      default: require(\"@/assets/img/batman-2.png\")\n    },\n    activeColor: {\n      type: String,\n      default: \"\",\n      validator: value => {\n        let acceptedValues = [\"\", \"purple\", \"blue\", \"green\", \"orange\", \"red\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => []\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  computed: {\n    sidebarStyle() {\n      return {\n        backgroundImage: `url(${this.backgroundImage})`\n      };\n    }\n  }\n};\n",{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"src/components/SidebarPlugin","sourcesContent":["<template>\n  <div\n    class=\"sidebar\"\n    :data-color=\"activeColor\"\n    :data-image=\"backgroundImage\"\n    :style=\"sidebarStyle\"\n  >\n    <div class=\"logo\">\n      <a href=\"#\" class=\"simple-text logo-mini\">\n        <div class=\"logo-img\">\n          <img :src=\"imgLogo\" alt=\"\" />\n        </div>\n      </a>\n\n      <a\n        href=\"@/assets/img/logo.jpg\"\n        target=\"_blank\"\n        class=\"simple-text logo-normal\"\n      >\n        {{ lastname }} {{ firstname }}\n      </a>\n    </div>\n    <div class=\"sidebar-wrapper\">\n      <slot name=\"content\"></slot>\n      <md-list class=\"nav\">\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\n        <slot>\n          <sidebar-link\n            v-for=\"(link, index) in sidebarLinks\"\n            :key=\"link.name + index\"\n            :to=\"link.path\"\n            :link=\"link\"\n          >\n          </sidebar-link>\n        </slot>\n      </md-list>\n    </div>\n  </div>\n</template>\n<script>\nimport SidebarLink from \"./SidebarLink.vue\";\n\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  data() {\n    return {\n       lastname: null,\n      firstname: null\n    }\n  },\n   created() {\n    this.getInfo();\n  },\n  methods: {\n      getInfo() {\n      \n      axios.get('http://localhost:3000/api/users/' + jwt_decode(localStorage.getItem('token')).id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n          this.currentUser = response.data;\n          this.firstname = this.currentUser.first_name;\n          this.lastname = this.currentUser.last_name;\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n    }\n  },\n\n  components: {\n    SidebarLink\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"RED\"\n    },\n    backgroundImage: {\n      type: String,\n      default: require(\"@/assets/img/back_side_2.png\")\n    },\n    imgLogo: {\n      type: String,\n      default: require(\"@/assets/img/batman-2.png\")\n    },\n    activeColor: {\n      type: String,\n      default: \"\",\n      validator: value => {\n        let acceptedValues = [\"\", \"purple\", \"blue\", \"green\", \"orange\", \"red\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => []\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  computed: {\n    sidebarStyle() {\n      return {\n        backgroundImage: `url(${this.backgroundImage})`\n      };\n    }\n  }\n};\n</script>\n<style>\n@media screen and (min-width: 991px) {\n  .nav-mobile-menu {\n    display: none;\n  }\n}\n</style>\n"]}]}
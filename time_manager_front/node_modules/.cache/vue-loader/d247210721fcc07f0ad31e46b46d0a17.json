{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue","mtime":1569423716896},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  name: 'TeamGraph',\n\n  data() {\n    return {\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null'\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  created() {\n    this.getTeams();\n  },\n\n  methods: {\n    edit(id) {//FAIRE LE MODAL\n      axios.put('http://localhost:3000/api/teams/' + id, {/*OBJET*/}, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n        Swal.fire(\n                    'Félicitation!',\n                    'Team modifiée avec succès',\n                    'success'\n        )\n      })\n      .catch((error) => {\n          Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: 'Modification impossible'\n          })\n      });\n    },\n\n    remove(id) {\n      Swal.fire({\n                title: 'Êtes vous sûr de vouloir supprimer cette team ?',\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Oui supprimer'\n                }).then((result) => {\n                if (result.value) {\n                    axios.delete('http://localhost:3000/api/teams/' + id, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                        this.getTeams();\n                        Swal.fire(\n                            'Supprimé!',\n                            'success'\n                        )\n                    }).catch(err => {\n                        Swal.fire({\n                            type: 'error',\n                            title: 'Erreur',\n                            text: 'Suppression impossible'\n                        })\n                        console.log(id);\n                    });\n                }\n            })\n    },\n\n    getTeams() {\n      axios.get('http://localhost:3000/api/teams', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n    .then((response) => {\n      this.allTeams = response.data;\n\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.myTeams = this.allTeams;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        for (var i = 0; i < this.allTeams.length; i=i+1) {\n          if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n            this.myTeams.push(this.allTeams[i]);\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n  }\n};\n",{"version":3,"sources":["TeamGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"TeamGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <table class=\"table table-striped table-hover\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom de l'équipe</th>\n                <th scope=\"col\">Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"{id, name} in myTeams\" :key=\"id\">\n                <td><b>{{ id }}</b></td>\n                <td><b>{{ name }}</b></td>\n                <td><button v-on:click=\"edit\">Editer</button> | <button v-on:click=\"remove(id)\">Supprimer</button></td>\n                </tr>\n            </tbody>\n      </table>\n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  name: 'TeamGraph',\n\n  data() {\n    return {\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null'\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  created() {\n    this.getTeams();\n  },\n\n  methods: {\n    edit(id) {//FAIRE LE MODAL\n      axios.put('http://localhost:3000/api/teams/' + id, {/*OBJET*/}, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      })\n      .then((response) => {\n        Swal.fire(\n                    'Félicitation!',\n                    'Team modifiée avec succès',\n                    'success'\n        )\n      })\n      .catch((error) => {\n          Swal.fire({\n              type: 'error',\n              title: 'Erreur',\n              text: 'Modification impossible'\n          })\n      });\n    },\n\n    remove(id) {\n      Swal.fire({\n                title: 'Êtes vous sûr de vouloir supprimer cette team ?',\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Oui supprimer'\n                }).then((result) => {\n                if (result.value) {\n                    axios.delete('http://localhost:3000/api/teams/' + id, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                        this.getTeams();\n                        Swal.fire(\n                            'Supprimé!',\n                            'success'\n                        )\n                    }).catch(err => {\n                        Swal.fire({\n                            type: 'error',\n                            title: 'Erreur',\n                            text: 'Suppression impossible'\n                        })\n                        console.log(id);\n                    });\n                }\n            })\n    },\n\n    getTeams() {\n      axios.get('http://localhost:3000/api/teams', {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    })\n    .then((response) => {\n      this.allTeams = response.data;\n\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.myTeams = this.allTeams;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        for (var i = 0; i < this.allTeams.length; i=i+1) {\n          if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n            this.myTeams.push(this.allTeams[i]);\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n  }\n};\n</script>\n"]}]}
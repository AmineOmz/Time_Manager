{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/Dashboard.vue?vue&type=style&index=0&id=1d81e2c0&scoped=true&lang=css&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/Dashboard.vue","mtime":1569756635071},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  height: 500px;\n}\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"graph\" ref=\"chartdiv\"></div>\n</template>\n\n<script>\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport DashboardLayout from '@/pages';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport moment from 'moment';\n\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'HelloWorld',\n  mounted() {\n    let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    let token = localStorage.getItem('token');\n    axios.get('http://localhost:3000/api/workingtimes/user/' +  jwt_decode(token).id, {\n      headers: {Authorization: 'Bearer ' + token}\n      })\n    .then(function(result) {\n      var data = result.data;\n\n      var graphData = [];\n      var dailyHours = 0;\n\n      var index, obj;\n\n      for (var [index, obj] of data.entries()) {\n        var start = moment(obj.start);\n        var end = moment(obj.end);\n        dailyHours += end.diff(start, 'hours');\n        if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n           graphData.push({\n            date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n            hours: dailyHours\n          });\n          dailyHours = 0;\n        }\n      }\n      chart.data = graphData;\n    })\n    // XY\n    chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"hours\";\n    series.dataFields.dateX = \"date\";\n    series.tooltipText = \"{value}\";\n    series.dataFields.value = \"hours\";\n    series.columns.template.width = am4core.percent(50);\n    series.tooltip.pointerOrientation = \"vertical\";\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.snapToSeries = series;\n    chart.cursor.xAxis = dateAxis;\n    //chart.scrollbarY = new am4core.Scrollbar();\n    chart.scrollbarX = new am4core.Scrollbar();\n\n    this.chart = chart;\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.graph {\n  width: 100%;\n  height: 500px;\n}\n</style>"]}]}
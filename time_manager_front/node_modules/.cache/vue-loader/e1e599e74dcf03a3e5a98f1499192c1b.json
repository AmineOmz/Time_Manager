{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserGraph.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/UserGraph.vue","mtime":1569786164602},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#listTeams, #listUsers {\n    width: 80%;\n    display: block;\n    margin: 0 auto;\n}\n.graph {\n  margin: auto;\n  width: 90%;\n  height: 500px;\n}\n",{"version":3,"sources":["UserGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        <select id=\"listTeams\" v-if=\"admin\">\n            <option>Choisissez un utilisateur</option>\n            <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\" v-on:click=\"selectedValue\">{{ user.last_name }} / {{ user.first_name }} /  {{ user.role }}</option>\n        </select>\n\n      <!-- CASE MANAGER  -->\n        <select id=\"listTeams\" v-if=\"manager\">\n            <option>Choisissez une équipe</option>\n            <option v-for=\"team in myTeams\" :key=\"team.id\" :value=\"team.id\" v-on:click=\"selectedValueTeam\">{{ team.name }}</option>\n        </select>\n        <br><br>\n        <select id=\"listUsers\" v-if=\"manager\">\n            <option>Choisissez un utilisateur</option>\n            <option v-for=\"user in myUsersInfoUnique\" :key=\"user.id\" :value=\"user.id\" v-on:click=\"selectedValueM\">{{ user.first_name }} / {{ user.last_name }} / {{ user.role }}</option>\n        </select>\n        <br>\n\n    <b-card bg-variant=\"light\" text-variant=\"dark\" border-variant=\"dark\" title=\"Time Range\">\n      <center>\n      <b-card-text>\n        Start: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"start\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      <b-card-text>\n        End: <date-picker format=\"YYYY-MM-DD HH:mm:ss\" valueType=\"format\" v-model=\"end\" type=\"datetime\" :time-picker-options=\"timeOptions\" :lang=\"lang\" :shortcuts=\"shortcuts\"></date-picker>\n      </b-card-text>\n      </center>\n    </b-card>\n    <br/>\n    <center><b-button v-on:click=\"display\">Afficher le graph</b-button></center>\n    <div class=\"graph\" ref=\"chartdiv\"></div>\n    </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport moment from 'moment';\nimport DatePicker from 'vue2-datepicker';\nimport datetime from 'vuejs-datetimepicker';\n\nam4core.useTheme(am4themes_animated);\n\nexport default {\n    name: 'UserGraph',\n    components: {\n        DatePicker,\n        datetime\n    },\n    data() {\n        return {\n            // FOR ROLES\n            admin: null,\n            manager: null,\n\n            users: [],\n            allTeams: [],\n            myTeams: [],\n            myUsers: [],\n            myUsersInfo: [],\n            myUsersInfoUnique: [],\n\n            // FOR ALL\n            userId: null,\n            start: null,\n            end: null,\n            shortcuts: [\n            {\n                text: 'OK',\n                onClick: () => {\n                this.start = [new Date()],\n                this.end = [new Date()]\n                }\n            }],\n            timeOptions: {\n                start: '',\n                step: '',\n                end: ''\n            },\n            lang: {\n                days: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n                months: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jui', 'Jui', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],\n            }            \n        }\n    },\n    created() {\n        this.checkRole();\n        this.getUsers();\n        this.getMyTeams();\n    },\n    mounted() {\n        let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n        chart.data = [];\n        // XY\n        chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        let series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueY = \"hours\";\n        series.dataFields.dateX = \"date\";\n        series.tooltipText = \"{value}\";\n        series.dataFields.value = \"hours\";\n        series.columns.template.width = am4core.percent(50);\n        series.tooltip.pointerOrientation = \"vertical\";\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.snapToSeries = series;\n        chart.cursor.xAxis = dateAxis;\n        //chart.scrollbarY = new am4core.Scrollbar();\n        chart.scrollbarX = new am4core.Scrollbar();\n        this.chart = chart; \n    },\n\n    beforeDestroy() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    },\n    methods: {\n        selectedValue(e) {\n            this.userId = e.target.value;\n        },\n\n        selectedValueM(e) {\n            this.userId = e.target.value;\n        },\n\n        selectedValueTeam(e) {\n            this.myUsersInfoUnique = [];\n            this.teamId = e.target.value;\n\n            axios.get('http://localhost:3000/api/teamscontent/team/' + this.teamId, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.myUsers = response.data;\n                \n                for (var i = 0; i < this.myUsers.length; i++) {\n                    axios.get('http://localhost:3000/api/users/' + this.myUsers[i].employeeId, {\n                        headers: {\n                            Authorization: 'Bearer ' + localStorage.getItem('token')\n                        }\n                    })\n                    .then((resp) => {\n                        this.myUsersInfoUnique.push(resp.data);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        },\n\n        checkRole() {\n            if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n                this.admin = true;\n            } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager'){\n                this.manager = true;\n                this.admin = false;\n            } else {\n                this.admin = false;\n                this.manager = false;\n            }\n        },\n\n        getUsers() {\n            axios.get('http://localhost:3000/api/users', {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.users = response.data;\n                this.users.splice(0, 1);\n            })\n            .catch((errors) => {\n                console.log(errors);\n            })\n        },\n        getMyTeams() {\n            // GET ALL THE TEAMS\n            axios.get('http://localhost:3000/api/teams', {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\n                }\n            })\n            .then((response) => {\n                this.allTeams = response.data;\n\n                // GET MY TEAMS ONLY\n                for (var i = 0; i < this.allTeams.length; i++) {\n                    if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n                        this.myTeams.push(this.allTeams[i]);\n                    }\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        },\n\n        display() {\n            if (this.userId == null) {\n                Swal.fire({\n                        type: 'error',\n                        title: 'Erreur',\n                        text: \"Aucun employé n'a été sélectionné\",\n                        footer: 'Merci de réessayez'\n                    })\n            } else {\n                this.update_data();\n            }\n        },\n\n        update_data() {\n            var self = this;\n            var query = \"http://localhost:3000/api/workingtimes/user/\" +  this.userId\n            if (this.start != null && this.end != null) {\n                query += `?start=${this.start}&end=${this.end}`;\n            }\n            axios.get(query, {\n            headers: {Authorization: 'Bearer ' + localStorage.getItem('token')}\n            })\n            .then(function(result) {\n            var data = result.data;\n            var graphData = [];\n            var dailyHours = 0;\n            var index, obj;\n\n            for (var [index, obj] of data.entries()) {\n                var start = moment(obj.start);\n                var end = moment(obj.end);\n                dailyHours += end.diff(start, 'hours');\n                if (data[index+1] == undefined || !(moment(data[index+1].start).isSame(start, 'day'))) {\n                graphData.push({\n                    date: `${start.year().toString()}-${(start.month() + 1).toString()}-${start.date().toString()}`,\n                    hours: dailyHours\n                });\n                dailyHours = 0;\n                }\n            }\n            self.chart.data = graphData;\n            })\n        },\n    }\n}\n</script>\n\n<style>\n#listTeams, #listUsers {\n    width: 80%;\n    display: block;\n    margin: 0 auto;\n}\n.graph {\n  margin: auto;\n  width: 90%;\n  height: 500px;\n}\n</style>\n"]}]}
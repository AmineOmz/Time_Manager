{"remainingRequest":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/src/pages/TeamGraph.vue","mtime":1569547033646},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/AmineOmz/Bureau/T_DOP_700/front_aut/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  name: 'TeamGraph',\n\n  data() {\n    return {\n      admin: null,\n      manager: null,\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null'\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  created() {\n    this.checkRole();\n    this.getTeams();\n  },\n\n  methods: {\n\n    checkRole() {\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        this.manager = true;\n        this.admin = false;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n\n    getTeams() {\n      axios.get('http://localhost:3000/api/teams', {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n      })\n      .then((response) => {\n\n          this.allTeams = response.data;\n\n        if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n            this.myTeams = this.allTeams;\n        } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n            for (var i = 0; i < this.allTeams.length; i++) {\n            if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n              this.myTeams.push(this.allTeams[i]);\n            }\n          }\n          console.log(this.myTeams);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n    },\n\n    edit(id) {\n      alert('ho')\n    },\n\n    remove(id) {\n\n      axios.delete('http://localhost:3000/api/teams/' + id, {\n              headers: {\n                      Authorization: 'Bearer ' + localStorage.getItem('token')\n              }\n      }).then(response => {\n              this.getTeams();\n              Swal.fire(\n                      'Supprimé!',\n                      'success'\n              )\n      }).catch(err => {\n              Swal.fire({\n                      type: 'error',\n                      title: 'Erreur',\n                      text: 'Suppression impossible'\n              })\n      });\n    },\n\n    display() {\n      alert('GRAPH');\n    }\n  }\n};\n",{"version":3,"sources":["TeamGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TeamGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <table class=\"table table-striped table-hover\" v-if=\"admin\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom de l'équipe</th>\n                <th scope=\"col\">Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"{id, name} in myTeams\" :key=\"id\">\n                <td><b>{{ id }}</b></td>\n                <td><b>{{ name }}</b></td>\n                <td><button v-on:click=\"edit(id)\">Editer</button> | <button v-on:click=\"remove(id)\">Supprimer</button></td>\n                </tr>\n            </tbody>\n      </table>\n\n      <table class=\"table table-striped table-hover\" v-if=\"manager\">\n            <thead class=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nom de l'équipe</th>\n                <th scope=\"col\">Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"myTeam in myTeams\" :key=\"myTeam.id\">\n                <td><b>{{ myTeam.id }}</b></td>\n                <td><b>{{ myTeam.name }}</b></td>\n                <td><button v-on:click=\"edit(myTeam.id)\">Editer</button> | <button v-on:click=\"remove(myTeam.id)\">Supprimer</button></td>\n                </tr>\n            </tbody>\n      </table>\n\n      <br><br>\n      <center><button v-on:click=\"display\">Afficher le graph</button></center>\n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport jwt_decode from 'jwt-decode';\n\nexport default {\n\n  name: 'TeamGraph',\n\n  data() {\n    return {\n      admin: null,\n      manager: null,\n      allTeams: [],\n      myTeams: [],\n      name: '',\n      nameState: 'null'\n    }\n  },\n  \n  props: {\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  created() {\n    this.checkRole();\n    this.getTeams();\n  },\n\n  methods: {\n\n    checkRole() {\n      if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n        this.admin = true;\n        this.manager = false;\n      } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n        this.manager = true;\n        this.admin = false;\n      } else {\n        this.admin = false;\n        this.manager = false;\n      }\n    },\n\n    getTeams() {\n      axios.get('http://localhost:3000/api/teams', {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n      })\n      .then((response) => {\n\n          this.allTeams = response.data;\n\n        if (jwt_decode(localStorage.getItem('token')).role == 'Administrator') {\n            this.myTeams = this.allTeams;\n        } else if (jwt_decode(localStorage.getItem('token')).role == 'Manager') {\n            for (var i = 0; i < this.allTeams.length; i++) {\n            if (this.allTeams[i].managerId == jwt_decode(localStorage.getItem('token')).id) {\n              this.myTeams.push(this.allTeams[i]);\n            }\n          }\n          console.log(this.myTeams);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n    },\n\n    edit(id) {\n      alert('ho')\n    },\n\n    remove(id) {\n\n      axios.delete('http://localhost:3000/api/teams/' + id, {\n              headers: {\n                      Authorization: 'Bearer ' + localStorage.getItem('token')\n              }\n      }).then(response => {\n              this.getTeams();\n              Swal.fire(\n                      'Supprimé!',\n                      'success'\n              )\n      }).catch(err => {\n              Swal.fire({\n                      type: 'error',\n                      title: 'Erreur',\n                      text: 'Suppression impossible'\n              })\n      });\n    },\n\n    display() {\n      alert('GRAPH');\n    }\n  }\n};\n</script>\n"]}]}